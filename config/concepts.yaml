concepts:
  - name: network
    links:
      - title: Site concept
        url: /concepts/site.html
      - title: Link concept
        url: /concepts/link.html
    description: |
      A _network_ is a set of linked sites. A Skupper network is also
      known as an _application network_ or _virtual application
      network_ (VAN).

      Each network is meant for one distributed application.  This
      provides isolation from other applications and networks.

      <figure>
        <img src="images/network-1.svg"/>
        <figcaption>A simple two-site network</figcaption>
      </figure>

      <figure>
        <img src="images/network-2.svg"/>
        <figcaption>A larger network</figcaption>
      </figure>
  - name: site
    links:
      - title: Network concept
        url: /concepts/network.html
      - title: Link concept
        url: /concepts/link.html
      - title: Platform concept
        url: /concepts/platform.html
    description: |
      A _site_ is a place on the network where workloads are running.
      Sites are linked to form application networks.

      Sites operate on multiple platforms.  One site corresponds to
      one namespace in a platform instance.  Sites can be added to a
      network and removed from a network dynamically.

      Each site has a Skupper router which is responsible for
      communicating with the local workloads and forwarding traffic to
      routers in remote sites.

      <figure>
        <img src="images/site-1.svg"/>
        <figcaption>A site with three workloads</figcaption>
      </figure>

      <figure>
        <img src="images/site-2.svg"/>
        <figcaption>Two sites linked to form a network</figcaption>
      </figure>

      <figure>
        <img src="images/site-3.svg"/>
        <figcaption>A network with sites on different platforms</figcaption>
      </figure>
  - name: platform
    links:
      - title: Site concept
        url: /concepts/site.html
    description: |
      A _platform_ is a system for running workloads.  A platform
      hosts sites.  Skupper supports Kubernetes, Docker, Podman, and
      Linux.

      Platforms provide namespaces for related workloads and
      resources.  Skupper uses namespaces to host multiple independent
      sites on one instance of a platform.

      <figure>
        <img src="images/platform-1.svg"/>
        <figcaption>A platform hosting a site with three workloads</figcaption>
      </figure>

      <figure>
        <img src="images/platform-2.svg"/>
        <figcaption>Three networks spanning three different platforms</figcaption>
      </figure>
  - name: link
    links:
      - title: Network concept
        url: /concepts/network.html
      - title: Site concept
        url: /concepts/site.html
      - title: Access token concept
        url: /concepts/access-token.html
    description: |
      A _link_ is a channel for communication between sites.  Links
      serve as a transport for application connections and requests.
      A set of linked sites constitutes a network.

      To create a link to a remote site, the remote site must provide
      _link access_.  A link access is an external access point for
      accepting links.

      Application connections and requests flow across links in both
      directions.  A linked site can communicate with any other site
      in the network of sites, even if it is not linked directly.

      Links are encrypted and authenticated using mutual TLS.  You can
      use access tokens to create links.

      <figure>
        <img src="images/link-1.svg"/>
        <figcaption>A link joining two sites to create a simple network</figcaption>
      </figure>

      <figure>
        <img src="images/link-2.svg"/>
        <figcaption>A site with two links, to two remote sites</figcaption>
      </figure>

      <figure>
        <img src="images/link-3.svg"/>
        <figcaption>A larger network with links to a central hub site</figcaption>
      </figure>
  # - name: access grant
  #   links:
  #     - title: Access token concept
  #       url: /concepts/access-token.html
  #     - title: Link concept
  #       url: /concepts/link.html
  #     - title: Token issue command
  #       url: /commands/token-issue.html
  #   description: |
  #     An _access grant_ enables redemption of access tokens.  A remote
  #     site can use a token containing the grant URL and secret code to
  #     obtain a certificate signed by the grant's certificate authority
  #     (CA), within a certain expiration window and for a limited
  #     number of redemptions.
  #   overview: |
  #     - Tokens have limited lifetimes and limited uses
  - name: access token
    links:
      - title: Token issue command
        url: /commands/token-issue.html
      - title: Token redeem command
        url: /commands/token-redeem.html
      - title: Link concept
        url: /concepts/link.html
    description: |
      An _access token_ is a short-lived credential used to create a
      link.  An access token contains the URL and secret code of a
      corresponding access grant.

      A site wishing to accept a link (the origin site) creates an
      access grant.  It uses the access grant to create a
      corresponding access token (it _issues_ a token) and transfers
      it to a remote site.  The remote site submits the access token
      to the origin site (it _redeems_ the token).  If the token is
      valid, the origin site sends the remote site the TLS credentials
      and connection endpoints required to create a link to the origin
      site.

      Access tokens are limited to a maximum number of uses, and they
      expire shortly after they are issued.  By default, they are
      restricted to a single use, and they expire after 15 minutes.
      You can configure the limits on the access grant.

      <figure>
        <img src="images/access-token-1.svg"/>
        <figcaption>An access grant and corresponding access token</figcaption>
      </figure>

      <figure>
        <img src="images/access-token-2.svg"/>
        <figcaption>The sequence for issuing and redeeming access tokens</figcaption>
      </figure>
  - name: service
    related_resources: [AccessGrant, AccessToken]
    links:
      - title: Listener concept
        url: /concepts/listener.html
      - title: Connector concept
        url: /concepts/connector.html
      - title: Routing key concept
        url: /concepts/routing-key.html
    description: |
      A _service_ is an application component exposed on the network.

      <img src="images/service-1.svg"/>
      <img src="images/service-2.svg"/>
      <img src="images/service-3.svg"/>
    overview: |
      - XXX at the network level
      - XXX a listener and a connector bound together by a routing key
  - name: listener
    links:
      - title: Service concept
        url: /concepts/service.html
      - title: Connector concept
        url: /concepts/connector.html
      - title: Routing key concept
        url: /concepts/routing-key.html
    description: |
      A _listener_ binds a local connection endpoint to connectors in
      remote sites.

      <img src="images/listener-1.svg"/>
  - name: connector
    links:
      - title: Service concept
        url: /concepts/service.html
      - title: Listener concept
        url: /concepts/listener.html
      - title: Routing key concept
        url: /concepts/routing-key.html
    description: |
      A _connector_ binds a local workload to listeners in remote
      sites.

      <img src="images/connector-1.svg"/>
    overview: |
      - A connector targets a workload in the local site (or
        reachable on the local network).
      - A connector forwards connections from matching listeners
        at remote sites to the workload in the local site.
  - name: routing key
    description: |
      A _routing key_ is an identifier for matching listeners to
      connectors.
    links:
      - title: Listener concept
        url: /concepts/listener.html
      - title: Connector concept
        url: /concepts/connector.html
  - name: attached connector
    description: |
      An _attached connector_ is a connector in a peer namespace.

      <img src="images/attached-connector-1.svg"/>
groups:
  - name: Networks and sites
    concepts:
      - network
      - site
      - platform
  - name: Site linking
    concepts:
      - link
      - access token
  - name: Service exposure
    concepts:
      - service
      - listener
      - connector
      - attached connector
