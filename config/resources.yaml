properties:
  metadata/name:
    name: name
    type: string
    updatable: false
    required: true
    links: [kubernetes/object_names]
    description: |
      The name of the resource.
  metadata/namespace:
    name: namespace
    type: string
    updatable: false
    related_concepts: [platform]
    links: [kubernetes/namespaces, skupper/system_namespaces]
    description: |
      The namespace of the resource.
  settings:
    name: settings
    group: advanced
    type: object
    links: [skupper/resource_settings]
    description: |
      A map containing additional settings.  Each map entry has a
      string name and a string value.
  status/status:
    name: status
    links: [skupper/resource_status]
    description: |
      The current state of the resource.

      - Pending
      - Ready
  status/message:
    name: message
    links: [skupper/resource_status]
    description: |
      A human-readable status message.
  status/conditions:
    name: conditions
    group: advanced
    platforms: [Kubernetes]
    links: [skupper/resource_status, kubernetes/conditions]
    description: |
      A set of named conditions describing the current state of the
      resource.
  connector/spec/routingKey:
    name: routingKey
    related_concepts: ["routing key"]
    description: |
      The identifier used to route traffic from listeners to
      connectors.  To expose a local workload to a remote site, the
      remote listener and the local connector must have matching
      routing keys.
  connector/spec/port:
    name: port
    description: |
      The port on the target workload to forward traffic to.

      <!-- The port to connect to. -->
  connector/spec/selector:
    name: selector
    group: frequently-used
    platforms: [Kubernetes]
    links: [kubernetes/label_selectors]
    description: |
      A Kubernetes label selector for specifying target server pods.

      <!-- The selector that identifies the pods to connect to. -->
      <!-- This uses the compact format with '=' expressions -->
      <!-- Either this or host must be specified -->

      On Kubernetes, you usually want to use this.  As an alternative,
      you can use `host`.
  connector/spec/host:
    name: host
    description: |
      The hostname or IP address of the server.  This is an
      alternative to `selector` for specifying the target server.
  connector/spec/includeNotReady:
    name: includeNotReady
    rename: includeNotReadyPods
    group: advanced
    platforms: [Kubernetes]
    description: |
      If true, include server pods in the `NotReady` state.
  connector/spec/exposePodsByName:
    name: exposePodsByName
    group: advanced
    type: boolean
    platforms: [Kubernetes]
    links: [skupper/individual_pod_services]
    description: |
      If true, expose each pod as an individual service.
  connector/spec/tlsCredentials:
    name: tlsCredentials
    group: advanced
    links: [skupper/application_tls, kubernetes/tls_secrets, skupper/system_tls_credentials]
    description: |
      The name of a bundle of TLS certificates and keys used for
      secure router-to-server communication.  The bundle contains the
      trusted server certificate.  It optionally includes a client
      certificate and key for mutual TLS.

      On Kubernetes, the value is the name of a Secret in the current
      namespace.

      On Docker, Podman, and Linux, the value is the name of a
      directory under `input/certs/` in the current namespace.
  connector/spec/useClientCert:
    name: useClientCert
    group: advanced
    type: boolean
    links: [skupper/application_tls]
    description: |
      Send the client certificate when connecting in order to enable
      mutual TLS.
  connector/spec/verifyHostname:
    name: verifyHostname
    group: advanced
    type: boolean
    links: [skupper/application_tls]
    description: |
      If true, require that the hostname of the server connected to
      matches the hostname in the server's certificate.
  connector/spec/type:
    name: type
    hidden: true
    group: advanced
    default: tcp
    description: |
      The connector type.
  connector/status/hasMatchingListeners:
    name: hasMatchingListeners
    type: boolean
    related_concepts: ["routing key"]
  connector/status/selectedPods:
    name: selectedPods
    group: advanced
    type: array
resources:
  - name: Site
    related_concepts: [network, platform]
    related_resources: [Link]
    description: |
      A place where components of your application are running.
      Sites are linked to form application networks.

      There can be only one Site resource per namespace.
    examples:
      - description: A minimal site
        yaml: |
          apiVersion: skupper.io/v2alpha1
          kind: Site
          metadata:
            name: east
            namespace: hello-world-east
      - description: A site configured to accept links
        yaml: |
          apiVersion: skupper.io/v2alpha1
          kind: Site
          metadata:
            name: west
            namespace: hello-world-west
          spec:
            linkAccess: default
    metadata:
      include_properties: [metadata/*]
      properties:
        - name: name
    spec:
      include_properties: [settings]
      properties:
        - name: linkAccess
          group: frequently-used
          default: none
          related_concepts: ["link"]
          links: [skupper/site_linking]
          description: |
            Configure external access for links from remote sites.

            Sites and links are the basis for creating application
            networks.  In a simple two-site network, at least one of
            the sites must have link access enabled.
          choices:
            - name: none
              description: No linking to this site is permitted.
            - name: default
              description: |
                Use the default link access for the current platform.
                On OpenShift, the default is `route`.  For other
                Kubernetes flavors, the default is `loadbalancer`.
            - name: route
              description: Use an OpenShift route.  _OpenShift only._
            - name: loadbalancer
              description: Use a Kubernetes load balancer.  _Kubernetes only._
        - name: ha
          updatable: true
          platforms: [Kubernetes]
          links: [skupper/high_availability]
          description: |
            Configure the site for high availability (HA).  HA sites
            have two active routers.

            Note that Skupper routers are stateless, and they restart
            after failure.  This already provides a high level of
            availability.  Enabling HA goes further and reduces the
            window of downtime caused by restarts.
        - name: defaultIssuer
          group: advanced
          default: skupper-site-ca
          platforms: [Kubernetes]
          links: [skupper/router_tls, kubernetes/tls_secrets]
          description: |
            The name of a Kubernetes secret containing the signing CA
            used to generate a certificate from a token.  A secret is
            generated if none is supplied.

            This issuer is used by AccessGrant and RouterAccess if a
            specific issuer is not set.
        - name: edge
          group: advanced
          type: boolean
          links: [skupper/large_networks]
          description: |
            Configure the site to operate in edge mode.  Edge sites
            cannot accept links from remote sites.

            Edge mode can help you scale your network to large numbers
            of sites.  However, for networks with 16 or fewer sites,
            there is little benefit.

            Currently, edge sites cannot also have HA enabled.
        - name: serviceAccount
          group: advanced
          default: skupper-router
          platforms: [Kubernetes]
          links: [kubernetes/service_accounts]
          description: |
            The name of the Kubernetes service account under which to
            run the Skupper controller.
        - name: settings
          description: |
            @description@

            - `routerDataConnections` - Set the number of data
              connections the router uses when linking to other
              routers.<br/>
              Default: *Computed based on the number of router worker
              threads.  Minimum 2.*
            - `routerLogging` - Set the router logging level.<br/>
              Default: `info`.  Choices: `debug`, `info`, `warning`, `error`.
    status:
      include_properties: [status/*]
      properties:
        - name: status
        - name: message
        - name: conditions
          group: advanced
          description: |
            @description@

            - Configured
            - Running
            - Resolved
            - Ready
        - name: defaultIssuer
          group: advanced
          platforms: [Kubernetes]
          links: [skupper/router_tls, kubernetes/tls_secrets]
          description: |
            The name of the Kubernetes secret containing the active
            default signing CA.
        - name: endpoints
          group: advanced
          related_concepts: [link]
          links: [skupper/site_linking]
          description: |
            An array of connection endpoints.  Each item has a name, host,
            port, and group.

            <!-- To what purpose? -->
        - name: network
          group: advanced
        - name: sitesInNetwork
          group: advanced
          related_concepts: [network]
  - name: RouterAccess
    related_resources: [Link]
    description: |
      Configuration for secure access to the site router.  The
      configuration includes TLS credentials and router ports.
    spec:
      include_properties: [settings]
      properties:
        - name: roles
        - name: tlsCredentials
          links: [skupper/router_tls, kubernetes/tls_secrets, skupper/system_tls_credentials]
          description: |
            The name of a bundle of TLS certificates and keys used for
            secure router-to-router communication.  The bundle
            contains the trusted server certificate.  It optionally
            includes a client certificate and key for mutual TLS.

            On Kubernetes, the value is the name of a Secret in the
            current namespace.

            On Docker, Podman, and Linux, the value is the name of a
            directory under `input/certs/` in the current namespace.
        - name: generateTlsCredentials
        - name: issuer
        - name: accessType
        - name: bindHost
        - name: subjectAlternativeNames
    status:
      include_properties: [status/*]
      properties:
        - name: endpoints
          group: advanced
          description: |
            An array of connection endpoints.  Each item has a name, host,
            port, and group.

            <!-- To what purpose? -->
  - name: AccessGrant
    related_concepts: ["access token"]
    related_resources: [AccessToken]
    related_commands: [token/issue]
    description: |
      Permission to redeem access tokens for links to the local
      site.  A remote site can use a token containing the grant
      URL and secret code to obtain a certificate signed by the
      grant's certificate authority (CA), within a certain
      expiration window and for a limited number of redemptions.

      The `code`, `url`, and `ca` properties of the resource
      status are used to generate access tokens from the grant.
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [settings]
      properties:
        - name: redemptionsAllowed
          description: |
            The number of times an access token for this grant can
            be redeemed.
          default: 1
        - name: expirationWindow
          description: |
            The period of time in which an access token for this
            grant can be redeemed.
          default: 15m
        - name: code
          default: _Generated_
          description: |
            The secret code used to authenticate access tokens
            submitted for redemption.

            If not set, a value for the code field in the status is
            generated.
        - name: issuer
          platforms: [Kubernetes]
          links: [skupper/router_tls, kubernetes/tls_secrets]
          description: |
            The name of a Kubernetes secret used to generate a
            certificate when redeeming a token for this grant.

            If not set, the defaultIssuer on Site is used.
    status:
      include_properties: [status/*]
      properties:
        - name: redeemed
          rename: redemptions
          description: |
            The number of times a token for this grant has been
            redeemed.
        - name: expiration
          rename: expirationTime
          description: |
            The point in time when the grant expires.
        - name: url
          description: |
            The URL of the token-redemption service for this grant.
        - name: ca
          description: |
            The trusted server certificate of the token-redemption
            service for this grant.
        - name: code
          description: |
            The secret code used to authenticate access tokens
            submitted for redemption.
          default: _Generated_
  - name: AccessToken
    related_concepts: [access token]
    related_resources: [AccessGrant]
    related_commands: [token/redeem]
    description: |
      A transferrable token redeemable for a link to a remote
      site.  An access token contains the URL and secret code of a
      corresponding access grant.
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [settings]
      properties:
        - name: url
          description: |
            The URL of the token redemption service at the remote
            site.
        - name: ca
          required: false
          description: |
            The trusted server certificate of the token redemption
            service at the remote site.
        - name: code
          description: |
            The secret code used to authenticate the token when
            submitted for redemption.
        - name: linkCost
          type: integer # XXX This should come from the CRD
          default: 1
          links: [skupper/load_balancing]
          description: |
            The link cost to use when creating the link.
    status:
      include_properties: [status/*]
      properties:
        - name: redeemed
          description: |
            True if the token has been redeemed.  Once a token is
            redeemed, it cannot be used again.
  - name: Link
    related_resources: [RouterAccess]
    description: |
      A site-to-site communication channel. Links serve as a
      transport for application connections and requests.  A set
      of linked sites constitute a network.

      Links are not usually created directly.  Instead, you
      typically use an access token to obtain a link.
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [endpoints, settings]
      properties:
        - name: cost
          default: 1
          links: [skupper/load_balancing]
          description: |
            The configured routing cost of sending traffic over
            the link.
        - name: endpoints
          group: null
        - name: tlsCredentials
          links: [skupper/router_tls, kubernetes/tls_secrets, skupper/system_tls_credentials]
          description: |
            The name of a bundle of TLS certificates and keys used for
            secure router-to-router communication.  The bundle
            contains the trusted server certificate.  It optionally
            includes a client certificate and key for mutual TLS.

            On Kubernetes, the value is the name of a Secret in the
            current namespace.

            On Docker, Podman, and Linux, the value is the name of a
            directory under `input/certs/` in the current namespace.
    status:
      include_properties: [status/*]
      properties:
        - name: remoteSiteId
          description: |
            The unique ID of the site linked to.
        - name: remoteSiteName
          description: |
            The name of the site linked to.
  - name: Listener
    related_resources: [Connector]
    description: |
      A connection endpoint for communicating with workloads in remote
      sites.

      Each site can have multiple listener definitions.
    examples:
      - description: |
          A listener in site West for the Hello World backend service
          in site East
        yaml: |
          apiVersion: skupper.io/v2alpha1
          kind: Listener
          metadata:
            name: backend
            namespace: hello-world-west
          spec:
            routingKey: backend
            port: 8080
            host: backend
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [settings]
      properties:
        - name: routingKey
          related_concepts: ["routing key"]
          description: |
            The identifier used to route traffic from listeners to
            connectors.  To enable connecting to a service at a
            remote site, the local listener and the remote connector
            must have matching routing keys.
        - name: host
          description: |
            The hostname or IP address of the local listener.  Clients
            at this site use the listener host and port to
            establish connections to the remote service.
        - name: port
          description: |
            The port of the local listener.  Clients at this site use
            the listener host and port to establish connections to
            the remote service.
        - name: exposePodsByName
          type: boolean
          group: advanced
          platforms: [Kubernetes]
          links: [skupper/individual_pod_services]
          description: |
            If true, expose each pod as an individual service.
        - name: tlsCredentials
          group: advanced
          links: [skupper/application_tls, kubernetes/tls_secrets, skupper/system_tls_credentials]
          description: |
            The name of a bundle of TLS certificates and keys used for
            secure client-to-router communication.  The bundle contains
            the trusted server certificate.

            On Kubernetes, the value is the name of a Secret in the current
            namespace.

            On Docker, Podman, and Linux, the value is the name of a
            directory under `input/certs/` in the current namespace.
        - name: type
          hidden: true
          group: advanced
          default: tcp
          description: |
            The listener type.
        - name: settings
          description: |
            @description@

            - `observer` - Set the protocol observer used to generate
              traffic metrics.<br/>
              Default: `auto`.  Choices: `auto`, `none`, `http1`, `http2`.
    status:
      include_properties: [status/*]
      properties:
        - name: status
        - name: message
        - name: hasMatchingConnectors
          type: boolean
  - name: Connector
    related_resources: [Listener]
    description: |
      Binds local workloads to listeners in remote sites.

      Each site can have multiple connector resources.
    examples:
      - description: |
          A connector in site East for the Hello World backend service
        yaml: |
          apiVersion: skupper.io/v2alpha1
          kind: Connector
          metadata:
            name: backend
            namespace: hello-world-east
          spec:
            routingKey: backend
            port: 8080
            selector: app=backend
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [connector/spec/*, settings]
    status:
      include_properties: [status/*, connector/status/*]
      properties:
        - name: selectedPods
  - name: AttachedConnector
    platforms: [Kubernetes]
    related_concepts: ["attached connector"]
    related_resources: [AttachedConnectorAnchor]
    description: |
      A connector in a peer namespace.
    metadata:
      include_properties: [metadata/*]
      properties:
        - name: name
          description: |
            @description@

            The name must be the same as that of the associated
            AttachedConnectorBinding resource in the site namespace.
    spec:
      include_properties: [connector/spec/*, settings]
      exclude_properties: [connector/spec/routingKey, connector/spec/host]
      properties:
        - name: siteNamespace
          description: |
            The name of the namespace in which the site this connector
            should be attached to is defined.
    status:
      include_properties: [status/*, connector/status/*]
  - name: AttachedConnectorAnchor
    rename: AttachedConnectorBinding
    platforms: [Kubernetes]
    related_concepts: ["attached connector"]
    related_resources: [AttachedConnector]
    description: |
      A binding to an attached connector in a peer namespace.
    metadata:
      include_properties: [metadata/*]
      properties:
        - name: name
          description: |
            @description@

            The name must be the same as that of the associated
            AttachedConnector resource in the connector namespace.
    spec:
      include_properties: [connector/spec/routingKey, settings]
      properties:
        - name: connectorNamespace
          description: |
            The name of the namespace where the associated
            AttachedConnector is located.
    status:
      include_properties: [status/*, connector/status/*]
groups:
  - name: Site configuration
    resources:
      - Site
      - RouterAccess
  - name: Site linking
    resources:
      - AccessGrant
      - AccessToken
      - Link
  - name: Service exposure
    resources:
      - Listener
      - Connector
      - AttachedConnector
      - AttachedConnectorAnchor
