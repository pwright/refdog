groups:
  - name: Site configuration
    resources:
      - name: Site
        concept: site
        command: site create
        links:
          - name: Link resource
            url: /resources/link.html
        description: |
          @concept_description@

          There can be only one site resource per namespace.
        examples:
          - description: A minimal site
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Site
              metadata:
                name: east
                namespace: hello-world-east
          - description: A site configured to accept links
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Site
              metadata:
                name: west
                namespace: hello-world-west
              spec:
                linkAccess: default
        spec_properties:
          - name: linkAccess
            default: none
            description: |
              Configure external access for links from remote sites.
            choices:
              - name: none
                description: No linking to this site is permitted.
              - name: default
                description: |
                  Use the default link access.  On OpenShift, `route`
                  is the default.  For other Kubernetes flavors,
                  `loadbalancer` is the default.
              - name: route
                description: Use an OpenShift route.
              - name: loadbalancer
                description: Use a Kubernetes load balancer.
          - name: serviceAccount
            default: skupper:skupper-controller
            description: |
              The Kubernetes service account under which to run the
              Skupper controller.
            links:
              - name: Kubernetes service accounts
                url: https://kubernetes.io/docs/concepts/security/service-accounts/
          - name: settings
            rename: options
        status_properties:
          - name: status
            description: |
              The current state of the resource.
          - name: active
            description: |
              "This thing is working."
          - name: endpoints
          - name: sitesInNetwork
          - name: servicesInNetwork
          - name: network
  - name: Site linking
    resources:
      - name: Link
        concept: link
        command: link
        links:
          - name: Grant resource
            url: /resources/grant.html
          - name: Token resource
            url: /resources/claim.html
        description: |
          @concept_description@

          Links are not usually created directly.  Instead, you use a
          grant and token to obtain a link.
        spec_properties:
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing TLS
              credentials. The secret contains the trusted server
              certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: cost
          - name: interRouter
          - name: edge
          - name: noClientAuth
        status_properties:
          - name: status
            description: |
              The current state of the resource.
          - name: configured
          - name: active
          - name: url
          - name: site
      - name: Grant
        concept: grant
        command: grant
        links:
          - name: Token resource
            url: /resources/claim.html
        description: |
          @concept_description@
        spec_properties:
          - name: claims
            rename: redemptionsAllowed
            description: |
              The number of times a token for this grant can be
              redeemed.
            default: 1
          - name: validFor
            rename: expirationPeriod
            description: |
              The period of time in which a token for this grant can
              be redeemed.
            default: 15m
          - name: secret
            notes: |
              What is this secret as compared to the one in the
              status?  The description above says "containing the
              grant URL and secret".  Which secret is it referring to?

              "The certificate authority (CA) used to sign the
              certificate resulting from successful redemption"?
        status_properties:
          - name: status
            description: |
              The current state of the resource.
          - name: claimed
            rename: redemptions
            description: |
              The number of times a token for this grant has been
              redeemed.
          - name: expiration
            description: |
              The point in time when the grant expires.
          - name: secret
            rename: redemptionSecret
            description: |
              The secret used to authenticate tokens submitted for
              redemption.
          - name: url
            rename: redemptionURL
            description: |
              The URL of the token redemption service for this grant.
          - name: ca
            rename: redemptionCA
            description: |
              The trusted server certificate of the token redemption
              service for this grant.
      - name: Claim
        rename: Token
        concept: claim
        command: token redeem
        links:
          - name: Grant resource
            url: /resources/grant.html
        description: |
          @concept_description@
        spec_properties:
          - name: secret
            rename: redemptionSecret
            description: |
              The secret used to authenticate the token when submitted
              for redemption.
          - name: url
            rename: redemptionURL
            description: |
              The URL of the token redemption service at the target
              site.
          - name: ca
            rename: redemptionCA
            notes: |
              The trusted server certificate of the token redemption
              service at the target site.
        status_properties:
          - name: status
            description: |
              The current state of the resource.
          - name: claimed
            rename: redeemed
            description: |
              True if the token has been redeemed.
  - name: Service exposure
    resources:
      - name: Connector
        concept: connector
        command: connector create
        resource: Listener
        description: |
          @concept_description@

          Each site can have multiple connector resources.
        examples:
          - description: |
              A connector in site East for the Hello World backend service
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Connector
              metadata:
                name: backend
                namespace: hello-world-east
              spec:
                routingKey: backend
                port: 8080
                selector: app=backend
        spec_properties:
          - name: routingKey
            description: |
              The identifier used to route traffic from listeners to
              connectors.  To expose a local workload to a remote
              site, the remote listener and the local connector must
              have matching routing keys.
            links:
              - name: Routing key concept
                url: /concepts/routing-key.html
          - name: port
            description: |
              The port on the target workload to forward traffic to.
          - name: selector
            description: |
              A Kubernetes label selector for specifying target pods.
            links:
              - name: Kubernetes label selectors
                url: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
              - name: Kubernetes pods
                url: https://kubernetes.io/docs/concepts/workloads/pods/
          - name: host
            description: |
              The hostname or IP address of the server.  This is an
              alternative to `selector` for specifying the target
              server.
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing the trusted
              server certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.

              This option is used when setting up client-to-router TLS
              encryption.
            links:
              - name: TLS re-encrypt
                url: "" # XXX
          - name: includeNotReady
            description: |
              If set, include server pods that are not in the ready
              state.
          - name: type
            default: tcp
            description: |
              The connector type.
        status_properties:
          - name: status
            description: |
              The current state of the resource.
          - name: active
      - name: Listener
        concept: listener
        command: listener create
        resource: Connector
        description: |
          @concept_description@

          Each site can have multiple listener definitions.
        examples:
          - description: |
              A listener in site West for the Hello World backend service
              in site East
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Listener
              metadata:
                name: backend
                namespace: hello-world-west
              spec:
                routingKey: backend
                port: 8080
                host: backend
        spec_properties:
          - name: routingKey
            description: |
              The identifier used to route traffic from listeners to
              connectors.  To enable connecting to a service at a
              remote site, the local listener and the remote connector
              must have matching routing keys.
            links:
              - name: Routing key concept
                url: /concepts/routing-key.html
          - name: host
            description: |
              The hostname or IP address of the local listener.  Clients
              at this site use the listener host and port to
              establish connections to the remote service.
          - name: port
            description: |
              The port of the local listener.  Clients at this site use
              the listener host and port to establish connections to
              the remote service.
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing TLS
              credentials.  The secret contains the trusted server
              certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.

              This option is used when setting up router-to-server TLS
              encryption.
            links:
              - name: TLS re-encrypt
                url: "" # XXX
          - name: type
            default: tcp
            description: |
              The listener type.
        status_properties:
          - name: status
            description: |
              The current state of the resource.
          - name: active
  - name: Advanced stuff
    resources:
      - name: LinkAccess
        rename: RouterAccess
        description: |
          A point of external access for links from remote sites.  A
          LinkAccess configures the router to accept inter-router
          links and creates the Kubernetes resources for external
          access.
        spec_properties:
          - name: roles
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing the trusted
              server certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: ca
            description: |
              The name of a Kubernetes secret containing a CA for
              generating TLS credentials.  If the `tlsCredentials`
              property is not set, the controller uses `ca` to
              generate them.
            notes: |
              Consider tlsCA.  And "ca" often means "this is what I trust".  This thing has a different meaning.
          - name: bindHost
          - name: subjectAlternativeNames
          - name: options
          - name: accessType
        status_properties:
          - name: active
          - name: status
          - name: urls
  - name: Internal stuff
    resources:
      - name: SecuredAccess
        spec_properties:
          - name: ports
          - name: selector
          - name: ca
          - name: certificate
          - name: accessType
          - name: options
        status_properties:
          - name: active
          - name: status
          - name: urls
          - name: ca
      - name: Certificate
        spec_properties:
          - name: ca
          - name: subject
          - name: hosts
          - name: client
          - name: server
          - name: signing
        status_properties:
          - name: status
          - name: expiration
