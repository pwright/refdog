properties:
  metadata/name:
    name: name
    type: string
    updatable: false
    required: true
    description: |
      The name of the resource.
    links:
      - name: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  metadata/namespace:
    name: namespace
    type: string
    updatable: false
    description: |
      The namespace of the resource.
    links:
      - name: Kubernetes namespaces
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  settings:
    name: settings
    group: advanced
    type: object
    description: |
      Additional settings.
  status/status:
    name: status
    group: frequently-used
    description: |
      The current state of the resource.

      - Pending
      - Ready
  status/message:
    name: message
    group: frequently-used
  status/conditions:
    name: conditions
    group: advanced
    platforms: [Kubernetes]
    description: |
      A set of named conditions describing the current state of the
      resource.
    links:
      - name: Kubernetes conditions
        url: https://maelvls.dev/kubernetes-conditions/
resources:
  - name: Site
    related_concepts: [network, namespace]
    related_resources: [Link]
    description: |
      A place where components of your application are running.
      Sites are linked to form application networks.

      There can be only one Site resource per namespace.
    examples:
      - description: A minimal site
        yaml: |
          apiVersion: skupper.io/v2alpha1
          kind: Site
          metadata:
            name: east
            namespace: hello-world-east
      - description: A site configured to accept links
        yaml: |
          apiVersion: skupper.io/v2alpha1
          kind: Site
          metadata:
            name: west
            namespace: hello-world-west
          spec:
            linkAccess: default
    metadata:
      include_properties: [metadata/*]
      properties:
        - name: name
    spec:
      include_properties: [settings]
      properties:
        - name: linkAccess
          group: frequently-used
          default: none
          description: |
            Configure external access for links from remote sites.

            Sites and links are the basis for creating application
            networks.  In a simple two-site network, at least one of
            the sites must have link access enabled.
          choices:
            - name: none
              description: No linking to this site is permitted.
            - name: default
              description: |
                Use the default link access for the current platform.
                On OpenShift, the default is `route`.  For other
                Kubernetes flavors, the default is `loadbalancer`.
            - name: route
              description: Use an OpenShift route.  _OpenShift only._
            - name: loadbalancer
              description: Use a Kubernetes load balancer.  _Kubernetes only._
          links:
            - name: Site linking
              url: ""
            - name: Link access concept
              url: /concepts/link-access.html
            - name: Kubernetes load balancer services
              url: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
        - name: ha
          updatable: true
          description: |
            Configure the site for high availability (HA).  HA sites
            have two active routers.

            Note that Skupper routers are stateless, and they restart
            after failure.  This already provides a high level of
            availability.  Enabling HA goes further and serves to
            reduce the window of downtime caused by restarts.
          links:
            - name: Advanced deployment options
              url: ""
        - name: defaultIssuer
          group: advanced
          default: skupper-site-ca
          platforms: [Kubernetes]
          description: |
            The name of the Kubernetes secret containing the signing
            certificate used to generate a certificate from a token.
            A secret is generated if none is supplied.
        - name: edge
          group: advanced
          type: boolean
          description: |
            Configure the site to operate in edge mode.  Edge sites
            cannot accept links from remote sites.

            Edge mode can help you scale your network to large numbers
            of sites.  However, for networks with 16 or fewer sites,
            there is little benefit.
          links:
            - name: Advanced deployment options
              url: ""
        - name: serviceAccount
          group: advanced
          default: skupper-router
          platforms: [Kubernetes]
          description: |
            The name of the Kubernetes service account under which to
            run the Skupper controller.
          links:
            - name: Advanced deployment options
              url: ""
            - name: Kubernetes service accounts
              url: https://kubernetes.io/docs/concepts/security/service-accounts/
    status:
      include_properties: [status/*]
      properties:
        - name: status
        - name: message
        - name: conditions
          group: advanced
          description: |
            @description@

            - Configured
            - Running
            - Resolved
            - Ready
        - name: defaultIssuer
          group: advanced
          platforms: [Kubernetes]
        - name: endpoints
          group: advanced
        - name: network
          group: advanced
        - name: sitesInNetwork
          group: advanced
  - name: Link
    related_resources: [AccessGrant, AccessToken]
    description: |
      A site-to-site communication channel. Links serve as a
      transport for application connections and requests.  A set
      of linked sites constitute a network.

      Links are not usually created directly.  Instead, you
      typically use an access token to obtain a link.
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [settings]
      properties:
        - name: cost
          default: 1
          description: |
            The configured routing cost of sending traffic over
            the link.
          links:
            - name: Load balancing
              url: ""
        - name: endpoints
        - name: tlsCredentials
          description: |
            The name of a Kubernetes secret containing TLS
            credentials. The secret contains the trusted server
            certificate (typically a CA).

            It can optionally include a client certificate and key for
            mutual TLS.
          links:
            - name: Custom certificates
              url: ""
        - name: noClientAuth
          rename: useClientCert
    status:
      include_properties: [status/*]
      properties:
        - name: remoteSiteId
        - name: remoteSiteName
  - name: AccessGrant
    related_resources: [AccessToken]
    related_commands: [token/issue]
    description: |
      Permission to redeem access tokens for links to the local
      site.  A remote site can use a token containing the grant
      URL and secret code to obtain a certificate signed by the
      grant's certificate authority (CA), within a certain
      expiration window and for a limited number of redemptions.

      The `code`, `url`, and `ca` properties of the resource
      status are used to generate access tokens from the grant.
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [settings]
      properties:
        - name: redemptionsAllowed
          description: |
            The number of times an access token for this grant can
            be redeemed.
          default: 1
        - name: expirationWindow
          description: |
            The period of time in which an access token for this
            grant can be redeemed.
          default: 15m
        - name: code
          description: |
            The secret code used to authenticate access tokens
            submitted for redemption.

            If not set, a value for the code field in the status is
            generated.
        - name: issuer
          notes: |
            What is this?
    status:
      include_properties: [status/*]
      properties:
        - name: redeemed
          description: |
            The number of times a token for this grant has been
            redeemed.
          notes: |
            Suggest "redemptions" instead, to match
            "redemptionsAllowed" and avoid the impression that
            it's a boolean.
        - name: expiration
          description: |
            The point in time when the grant expires.
          notes: |
            Suggest "expirationTime" instead.  It seems to be the
            most conventional name.
        - name: url
          description: |
            The URL of the token-redemption service for this grant.
        - name: ca
          description: |
            The trusted server certificate of the token-redemption
            service for this grant.
        - name: code
          description: |
            The secret code used to authenticate access tokens
            submitted for redemption.
          default: _Generated_
  - name: AccessToken
    related_resources: [AccessGrant]
    related_commands: [token/redeem]
    description: |
      A transferrable token redeemable for a link to a remote
      site.  An access token contains the URL and secret code of a
      corresponding access grant.
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [settings]
      properties:
        - name: url
          description: |
            The URL of the token redemption service at the remote
            site.
        - name: ca
          description: |
            The trusted server certificate of the token redemption
            service at the remote site.
        - name: code
          description: |
            The secret code used to authenticate the token when
            submitted for redemption.
    status:
      include_properties: [status/*]
      properties:
        - name: redeemed
          description: |
            True if the token has been redeemed.
  - name: Listener
    related_resources: [Connector]
    description: |
      A connection endpoint for communicating with workloads in remote
      sites.

      Each site can have multiple listener definitions.
    examples:
      - description: |
          A listener in site West for the Hello World backend service
          in site East
        yaml: |
          apiVersion: skupper.io/v2alpha1
          kind: Listener
          metadata:
            name: backend
            namespace: hello-world-west
          spec:
            routingKey: backend
            port: 8080
            host: backend
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [settings]
      properties:
        - name: routingKey
          description: |
            The identifier used to route traffic from listeners to
            connectors.  To enable connecting to a service at a
            remote site, the local listener and the remote connector
            must have matching routing keys.
          links:
            - name: Routing key concept
              url: /concepts/routing-key.html
        - name: host
          description: |
            The hostname or IP address of the local listener.  Clients
            at this site use the listener host and port to
            establish connections to the remote service.
        - name: port
          description: |
            The port of the local listener.  Clients at this site use
            the listener host and port to establish connections to
            the remote service.
        - name: tlsCredentials
          description: |
            The name of a Kubernetes secret containing TLS
            credentials.  The secret contains the trusted server
            certificate (typically a CA).

            It can optionally include a client certificate and key for
            mutual TLS.

            This option is used when setting up client-to-router TLS
            encryption.
          links:
            - name: Site-scoped TLS
              url: "" # XXX
        - name: type
          group: advanced
          default: tcp
          description: |
            The listener type.
    status:
      include_properties: [status/*]
      properties:
        - name: matchingConnectorCount
          notes: This one has "count" but other counter fields do not.
  - name: Connector
    related_resources: [Listener]
    description: |
      Binds local workloads to listeners in remote sites.

      Each site can have multiple connector resources.
    examples:
      - description: |
          A connector in site East for the Hello World backend service
        yaml: |
          apiVersion: skupper.io/v2alpha1
          kind: Connector
          metadata:
            name: backend
            namespace: hello-world-east
          spec:
            routingKey: backend
            port: 8080
            selector: app=backend
    metadata:
      include_properties: [metadata/*]
    spec:
      include_properties: [settings]
      properties:
        - name: routingKey
          description: |
            The identifier used to route traffic from listeners to
            connectors.  To expose a local workload to a remote
            site, the remote listener and the local connector must
            have matching routing keys.
          links:
            - name: Routing key concept
              url: /concepts/routing-key.html
        - name: port
          description: |
            The port on the target workload to forward traffic to.
        - name: selector
          group: frequently-used
          description: |
            A Kubernetes label selector for specifying target server
            pods.

            On Kubernetes, you usually want to use this.  As an
            alternative, you can use `host`.
          platforms: [Kubernetes]
          links:
            - name: Kubernetes label selectors
              url: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
            - name: Kubernetes pods
              url: https://kubernetes.io/docs/concepts/workloads/pods/
        - name: host
          description: |
            The hostname or IP address of the server.  This is an
            alternative to `selector` for specifying the target
            server.
        - name: tlsCredentials
          description: |
            The name of a Kubernetes secret containing the trusted
            server certificate (typically a CA).

            It can optionally include a client certificate and key for
            mutual TLS.

            This option is used when setting up router-to-server TLS
            encryption.
          links:
            - name: Site-scoped TLS
              url: "" # XXX
        - name: includeNotReady
          description: |
            If set, include server pods that are not in the ready
            state.
          platforms: [Kubernetes]
          links:
            - name: Kubernetes pod lifecycle
              url: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/
        - name: type
          group: advanced
          default: tcp
          description: |
            The connector type.
    status:
      include_properties: [status/*]
      properties:
        - name: selectedPods
        - name: matchingListenerCount
  - name: AttachedConnector
    related_resources: [AttachedConnectorAnchor, Connector]
    spec:
      properties:
        - name: siteNamespace
        - name: port
        - name: selector
        - name: tlsCredentials
        - name: type
        - name: includeNotReady
        - name: settings
    status:
      include_properties: [status/*]
      properties:
        - name: selectedPods
        - name: matchingListenerCount
  - name: AttachedConnectorAnchor
    related_resources: [AttachedConnector]
    spec:
      properties:
        - name: connectorNamespace
        - name: routingKey
        - name: settings
    status:
      include_properties: [status/*]
      properties:
        - name: matchingListenerCount
groups:
  - name: Site configuration
    resources:
      - Site
  - name: Site linking
    resources:
      - Link
      - AccessGrant
      - AccessToken
  - name: Service exposure
    resources:
      - Listener
      - Connector
      - AttachedConnector
      - AttachedConnectorAnchor
