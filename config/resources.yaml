groups:
  - name: Site configuration
    resources:
      - name: Site
        description: |
          A [site][site] is a place where components of your application are
          running.  Sites are linked to form application
          [networks][network].

          There can be only one site definition per namespace.

          [site]: concepts.html#site
          [network]: concepts.html#network
        examples:
          - description: A minimal site
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Site
              metadata:
                name: east
                namespace: hello-world-east
          - description: A site configured to accept links
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Site
              metadata:
                name: west
                namespace: hello-world-west
              spec:
                linkAccess: default
        spec_properties:
          - name: linkAccess
            default: "`none`"
            description: |
              Configure external access for links from remote sites.

              Select the means of opening external access.

              `default` equates to `route` if the environment is
              OpenShift, otherwise `loadbalancer`.
            choices: [none, default, route, loadbalancer, nodeport, ingress]
          - name: serviceAccount
            default: "`skupper:skupper-controller`"
            description: |
              The Kubernetes service account under which to run the
              Skupper controller.
            links:
              - name: Kubernetes service accounts
                url: https://kubernetes.io/docs/concepts/security/service-accounts/
          - name: settings
            rename: options
        status_properties:
          - name: active
          - name: status
          - name: endpoints
          - name: sitesInNetwork
          - name: servicesInNetwork
          - name: network
  - name: Site linking
    resources:
      - name: Grant
        description: |
          An offer to accept links to the local site.  A remote site
          can use a claim containing the grant URL and secret to
          obtain a certificate signed by the grant's certificate
          authority (CA), within a certain expiration period and for a
          limited number of claims.
        spec_properties:
          - name: claims
            notes: Consider maxClaims, claimsAllowed, and maxClaimsAllowed
          - name: validFor
            notes: |
              Look for what would be conventional for this.
              "validFor" doesn't necessarily make it clear that it's
              about time: "valid for 3 uses".
          - name: secret
        status_properties:
          - name: claimed
            notes: |
              Suggest claimsAccepted.
          - name: status
          - name: url
          - name: secret
          - name: ca
          - name: expiration
      - name: Claim
        description: |
          A verifiable assertion of permission to link to a remote
          site.  A claim contains the URL and secret of a previous
          grant.
        spec_properties:
          - name: url
          - name: secret
          - name: ca
        status_properties:
          - name: claimed
            notes: |
              Suggest accepted.
          - name: status
  - name: Service exposure
    resources:
      - name: Connector
        description: |
          A [connector][connector] binds local servers to listeners in
          remote sites.

          Each site can have multiple connector definitions.

          [connector]: concepts.html#connector
        examples:
          - description: |
              A connector in site East for the Hello World backend service
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Connector
              metadata:
                name: backend
                namespace: hello-world-east
              spec:
                routingKey: backend
                port: 8080
                selector: app=backend
        spec_properties:
          - name: routingKey
            description: |
              The identifier used to route traffic from listeners to
              connectors.  To connect to a service at a remote site, the
              listener and connector must have matching routing keys.
          - name: port
            description: |
              The port number of the server listener.
          - name: selector
            description: |
              A Kubernetes [label selector][selector] for targeting server
              pods.

              [selector]: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
          - name: host
            description: |
              The hostname or IP address of the server.  This is an
              alternative to `selector` for specifying the target
              server.
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing the trusted
              server certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: type
            notes: |
              What is this again?  I think we need a qualifier on "type".
          - name: includeNotReady
        status_properties:
          - name: active
          - name: status
      - name: Listener
        description: |
          A [listener][listener] is a local connection endpoint bound to
          servers in remote sites.

          Each site can have multiple listener definitions.

          [listener]: concepts.html#listener
        examples:
          - description: |
              A listener in site West for the Hello World backend service
              in site East
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Listener
              metadata:
                name: backend
                namespace: hello-world-west
              spec:
                routingKey: backend
                port: 8080
                host: backend
        spec_properties:
          - name: routingKey
            description: |
              The identifier used to route traffic from listeners to
              connectors.  To connect to a service at a remote site, the
              listener and connector must have matching routing keys.
          - name: host
            description: |
              The hostname or IP address of the local listener.  Clients
              at this site use the listener host and port to
              establish connections to the remote service.
          - name: port
            description: |
              The port of the local listener.  Clients at this site use
              the listener host and port to establish connections to
              the remote service.
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing TLS
              credentials.  The secret contains the trusted server
              certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: type
            notes: |
              What is this again?  I think we need a qualifier on "type".
        status_properties:
          - name: active
          - name: status
  - name: Advanced stuff
    resources:
      - name: Link
        description: |
          A [link][link] is a site-to-site communication channel. Links
          serve as a transport for application connections and requests.

          [link]: concepts.html#link
        examples:
          - description: A typical link definition
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Link
              metadata:
                name: link-to-west
                namespace: hello-world-east
              spec:
                [...]
        spec_properties:
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing TLS
              credentials. The secret contains the trusted server
              certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: cost
          - name: interRouter
          - name: edge
          - name: noClientAuth
        status_properties:
          - name: configured
          - name: active
          - name: status
          - name: url
          - name: site
      - name: LinkAccess
        description: |
          A point of external access for links from remote sites.  A
          LinkAccess configures the router to accept inter-router
          links and creates the Kubernetes resources for external
          access.
        examples:
          - description: A typical link access definition
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: LinkAccess
              metadata:
                name: skupper-router
              spec:
                roles:
                - role: inter-router
                  port: 55671
                - role: edge
                  port: 45671
                tlsCredentials: skupper-site-server
        spec_properties:
          - name: roles
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing the trusted
              server certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: ca
            description: |
              The name of a Kubernetes secret containing a CA for
              generating TLS credentials.  If the `tlsCredentials`
              property is not set, the controller uses `ca` to
              generate them.
            notes: |
              Consider tlsCA.  And "ca" often means "this is what I trust".  This thing has a different meaning.
          - name: bindHost
            notes: |
              Just host?  What does "bind" do here to clarify?  I have a related attribute on site: linkAccessHost.
          - name: subjectAlternativeNames
          - name: options
          - name: accessType
        status_properties:
          - name: active
          - name: status
          - name: urls
  - name: Internal stuff
    resources:
      - name: SecuredAccess
        description: |
          A generic resource for exposing a workload by creating the
          necessary service and ingress resources and optionally
          generating TLS credentials.
        spec_properties:
          - name: ports
          - name: selector
          - name: ca
          - name: certificate
          - name: accessType
          - name: options
        status_properties:
          - name: active
          - name: status
          - name: urls
          - name: ca
      - name: Certificate
        spec_properties:
          - name: ca
          - name: subject
          - name: hosts
          - name: client
          - name: server
          - name: signing
        status_properties:
          - name: status
          - name: expiration
