groups:
  - name: Site configuration
    resources:
      - name: Site
        concept: site
        description: |
          @concept_description@

          There can be only one site definition per namespace.
        links:
          - name: Skupper site command
            url: /commands/skupper-site.html
        examples:
          - description: A minimal site
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Site
              metadata:
                name: east
                namespace: hello-world-east
          - description: A site configured to accept links
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Site
              metadata:
                name: west
                namespace: hello-world-west
              spec:
                linkAccess: default
        spec_properties:
          - name: linkAccess
            default: "`none`"
            description: |
              Configure external access for links from remote sites.
            choices:
              - name: none
                description: No link access.
              - name: default
                description: |
                  Use the default link access.  On OpenShift, `route`
                  is the default.  For other Kubernetes flavors,
                  `loadbalancer` is the default.
              - name: route
                description: Use an OpenShift route.
              - name: loadbalancer
                description: Use a Kubernetes load balancer.
          - name: serviceAccount
            default: "`skupper:skupper-controller`"
            description: |
              The Kubernetes service account under which to run the
              Skupper controller.
            links:
              - name: Kubernetes service accounts
                url: https://kubernetes.io/docs/concepts/security/service-accounts/
          - name: settings
            rename: options
        status_properties:
          - name: active
          - name: status
          - name: endpoints
          - name: sitesInNetwork
          - name: servicesInNetwork
          - name: network
  - name: Site linking
    resources:
      - name: Grant
        concept: grant
        description: |
          @concept_description@
        spec_properties:
          - name: claims
            notes: |
              Suggest **claimsAllowed**.
          - name: validFor
            notes: |
              Suggest **expirationPeriod**.
          - name: secret
        status_properties:
          - name: claimed
            description: |
              The number of times the grant has been claimed.
            notes: |
              Suggest **claimsRedeemed**.  "The number of times a claim on
              this grant has been redeemed."
          - name: status
          - name: url
          - name: secret
          - name: ca
          - name: expiration
            description: |
              The point in time when the grant expires.
      - name: Claim
        concept: claim
        description: |
          @concept_description@
        spec_properties:
          - name: url
            description: |
              The URL at which the claim is redeemed.
          - name: secret
          - name: ca
        status_properties:
          - name: claimed
            description: |
              Whether the claim has been claimed.
            notes: |
              Suggest **redeemed**.  "Whether the claim has been redeemed."
          - name: status
  - name: Service exposure
    resources:
      - name: Connector
        concept: connector
        description: |
          @concept_description@

          Each site can have multiple connector definitions.
        links:
          - name: Skupper connector command
            url: /commands/skupper-connector.html
        examples:
          - description: |
              A connector in site East for the Hello World backend service
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Connector
              metadata:
                name: backend
                namespace: hello-world-east
              spec:
                routingKey: backend
                port: 8080
                selector: app=backend
        spec_properties:
          - name: routingKey
            description: |
              The identifier used to route traffic from listeners to
              connectors.  To connect to a service at a remote site, the
              listener and connector must have matching routing keys.
          - name: port
            description: |
              The port number of the server listener.
          - name: selector
            description: |
              A Kubernetes label selector for targeting server pods.
            links:
              - name: Kubernetes label selectors
                url: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
          - name: host
            description: |
              The hostname or IP address of the server.  This is an
              alternative to `selector` for specifying the target
              server.
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing the trusted
              server certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: type
            notes: |
              What is this again?  I think we need a qualifier on "type".
          - name: includeNotReady
        status_properties:
          - name: active
          - name: status
      - name: Listener
        concept: listener
        description: |
          @concept_description@

          Each site can have multiple listener definitions.
        examples:
          - description: |
              A listener in site West for the Hello World backend service
              in site East
            yaml: |
              apiVersion: skupper.io/v1alpha1
              kind: Listener
              metadata:
                name: backend
                namespace: hello-world-west
              spec:
                routingKey: backend
                port: 8080
                host: backend
        spec_properties:
          - name: routingKey
            description: |
              The identifier used to route traffic from listeners to
              connectors.  To connect to a service at a remote site, the
              listener and connector must have matching routing keys.
          - name: host
            description: |
              The hostname or IP address of the local listener.  Clients
              at this site use the listener host and port to
              establish connections to the remote service.
          - name: port
            description: |
              The port of the local listener.  Clients at this site use
              the listener host and port to establish connections to
              the remote service.
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing TLS
              credentials.  The secret contains the trusted server
              certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: type
            notes: |
              What is this again?  I think we need a qualifier on "type".
        status_properties:
          - name: active
          - name: status
  - name: Advanced stuff
    resources:
      - name: Link
        concept: link
        description: |
          @concept_description@
        links:
          - name: Skupper links
            url: /concepts.html#link
        spec_properties:
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing TLS
              credentials. The secret contains the trusted server
              certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: cost
          - name: interRouter
          - name: edge
          - name: noClientAuth
        status_properties:
          - name: configured
          - name: active
          - name: status
          - name: url
          - name: site
      - name: LinkAccess
        description: |
          A point of external access for links from remote sites.  A
          LinkAccess configures the router to accept inter-router
          links and creates the Kubernetes resources for external
          access.
        spec_properties:
          - name: roles
          - name: tlsCredentials
            rename: tlsSecret
            description: |
              The name of a Kubernetes secret containing the trusted
              server certificate (typically a CA).

              It can optionally include a client certificate and key for
              mutual TLS.
          - name: ca
            description: |
              The name of a Kubernetes secret containing a CA for
              generating TLS credentials.  If the `tlsCredentials`
              property is not set, the controller uses `ca` to
              generate them.
            notes: |
              Consider tlsCA.  And "ca" often means "this is what I trust".  This thing has a different meaning.
          - name: bindHost
          - name: subjectAlternativeNames
          - name: options
          - name: accessType
        status_properties:
          - name: active
          - name: status
          - name: urls
  - name: Internal stuff
    resources:
      - name: SecuredAccess
        spec_properties:
          - name: ports
          - name: selector
          - name: ca
          - name: certificate
          - name: accessType
          - name: options
        status_properties:
          - name: active
          - name: status
          - name: urls
          - name: ca
      - name: Certificate
        spec_properties:
          - name: ca
          - name: subject
          - name: hosts
          - name: client
          - name: server
          - name: signing
        status_properties:
          - name: status
          - name: expiration
