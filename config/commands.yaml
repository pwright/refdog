standard_options:
  - name: name
    type: string
    required: true
  - name: file
    type: string
    required: true
  # Site options
  - name: enable-link-access
    type: boolean
    description: |
      Allow access for incoming links from remote sites.
    links:
      - name: Link access concept
        url: /concepts/link-access.html
  - name: link-access-type
    property: linkAccess
    default: default
    choices:
      - name: default
        description: |
          Use the default link access.  On OpenShift, the
          default is `route`.  For other Kubernetes flavors,
          the default is `loadbalancer`.
      - name: route
        description: Use an OpenShift route.  _OpenShift only._
      - name: loadbalancer
        description: Use a Kubernetes load balancer.  _Kubernetes only._
  - name: service-account
    property: serviceAccount
  # Link options
  - name: cost
    property: cost
  # Connector and listener options
  - name: port
    property: port
    positional: true
  - name: routing-key
    property: routingKey
    default: _Value of name_
  - name: host
    property: host
    default: _Value of name_
  - name: type
    property: type
  # Connector options
  - name: selector
    property: selector
    default: app=<value-of-name>
  - name: workload
    type: string
    format: resource name
    description: |
      A Kubernetes resource name that identifies a workload.
      It resolves to an equivalent pod selector.

      This is an alternative to setting the `--selector` or
      `--host` options.
    platforms: [Kubernetes]
    links:
      - name: Kubernetes workloads
        url: https://kubernetes.io/docs/concepts/workloads/
  - name: include-not-ready
    property: includeNotReady
    links:
      - name: Kubernetes pod lifecycle
        url: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/
  # TLS options
  - name: tls-secret
    property: tlsCredentials
  # Output options
  - name: output
    type: string
    description: |
      Print resources to the console instead of submitting
      them to the Skupper controller.
    choices:
      - name: json
        description: Produce JSON output
      - name: yaml
        description: Produce YAML output
  # Context options
  - name: namespace
    type: string
    description: |
      Set the namespace.
    links:
      - name: Kubernetes namespaces
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  - name: context
    type: string
    description: |
      Set the kubeconfig context.
    platforms: [Kubernetes]
    links:
      - name: Kubernetes kubeconfigs
        url: https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/
  - name: platform
    type: string
    choices:
      - name: kubernetes
        description: Kubernetes
      - name: docker
        description: Docker or Podman
    description: |
      Set the Skupper platform.
  # Global options
  - name: help
    type: ""
    description: |
      Display help and exit.
groups:
  - name: Site configuration
    commands:
      - name: site
        description: |
          Display help for site commands and exit.
        inherit_standard_options: [help]
      - name: site create
        description: |
          Create a site.
        examples: |
          # Create a site
          skupper site create west

          # Create a site that can accept links from remote sites
          skupper site create west --enable-link-access
        output: |
          Waiting for status...
          Site "<name>" is ready.
        inherit_standard_options: [name, enable-link-access, link-access-type, service-account, output, namespace, context, platform, help]
        options:
          - name: name
            description: |
              A name of your choice for the Skupper site.  This name is
              displayed in the console and CLI output.
        errors:
          - message: A site resource already exists
            description: |
              There is already a site resource defined for the namespace.
      - name: site update
        description: |
          Change site settings.
        examples: |
          # Update the site to accept links
          skupper site update --enable-link-access

          # Update multiple settings
          skupper site update --enable-link-access --service-account app1:alice
        output: |
          Waiting for update to complete...
          Site "<name>" is updated.
        inherit_standard_options: [name, enable-link-access, link-access-type, service-account, output, namespace, context, platform, help]
        options:
          - name: name
            type: string
            required: false
            positional: true
            description: |
              The name of the site resource.

              If not specified, the name is that of the site
              associated with the current namespace.
        errors:
          - message: No site resource exists
            description: |
              There is no existing Skupper site resource to update.
      - name: site delete
        description: |
          Delete a site.
        output: |
          Waiting for deletion to complete...
          Site "<name>" is deleted.
        inherit_standard_options: [namespace, context, platform, help]
        options:
          - name: name
            type: string
            required: false
            positional: true
            description: |
              The name of the site resource.

              If not specified, the name is that of the site
              associated with the current namespace.
        errors:
          - message: No site resource exists
            description: |
              There is no existing Skupper site resource to delete.
      - name: site status
        description: |
          Display the current status of a site.
        output: |
          NAME   STATUS
          west   Ready
        inherit_standard_options: [namespace, context, platform, help]
        notes: |
          What is services-in-network?  Is that the total number of
          unique routing keys defined by connectors?  Or listeners?
          Or listeners plus connectors (not the orphans), grouped by
          routing key?
  - name: Site linking
    commands:
      - name: token
        resource: Claim
        related_concepts: ["access grant", "access token"]
        related_resources: [AccessGrant, AccessToken]
        description: |
          Display help for token commands and exit.
        inherit_standard_options: [help]
      - name: token issue
        resource: AccessGrant
        related_concepts: ["access grant", "access token"]
        related_resources: [AccessGrant, AccessToken]
        related_commands: ["token redeem"]
        description: |
          Issue a token file redeemable for a link to the current site.

          This command first creates a grant in order to issue the
          token.
        output: |
          Waiting for status...
          Grant "<name>" is ready.
          Token file <file> created.

          Transfer this file to a remote site. At the remote site,
          create a link to this site using the 'skupper token
          redeem' command:

             $ skupper token redeem <file>

          The token expires after 1 use or after 15 minutes.
        examples: |
          # Issue an access token
          skupper token issue ~/token.yaml

          # Issue an access token with non-default limits
          skupper token issue ~/token.yaml --expiration-window 24h --redemptions-allowed 3
        inherit_standard_options: [file, namespace, context, platform, help]
        options:
          - name: file
            description: |
              The name of the token file to create.
          - name: expiration-window
            property: expirationWindow
          - name: redemptions-allowed
            property: redemptionsAllowed
        errors:
          - message: Link access is not enabled
            description: |
              Link access at this site is not currently enabled.  You
              can use "skupper site update --enable-link-access" to
              enable it.
      - name: token redeem
        related_concepts: ["access grant", "access token"]
        related_resources: [AccessGrant, AccessToken]
        related_commands: ["token issue"]
        description: |
          Redeem a token file in order to create a link to a remote
          site.
        output: |
          Waiting for status...
          Link "<name>" is active.
          You can now safely delete <file>.
        inherit_standard_options: [file, namespace, context, platform, help]
        options:
          - name: file
            description: |
              The name of the token file to use.
      - name: link
        related_commands: [token]
        description: |
          Display help for link commands and exit.
        inherit_standard_options: [help]
      - name: link create
        description: |
          Create a link.
        output: |
          Waiting for status...
          Link "<name>" is ready.
        inherit_standard_options: [name, tls-secret, cost, output, namespace, context, platform, help]
        options:
          - name: name
            description: |
              The name of the link.
          - name: tls-secret
            required: true
            positional: true
      - name: link update
        description: |
          Change link settings.
        output: |
          Waiting for update to complete...
          Link "<name>" is updated.
        inherit_standard_options: [name, tls-secret, cost, output, namespace, context, platform, help]
        options:
          - name: name
          - name: tls-secret
            required: false
      - name: link delete
        description: |
          Delete a link.
        output: |
          Waiting for deletion to complete...
          Link "<name>" is deleted.
        inherit_standard_options: [name, namespace, context, platform, help]
        options:
          - name: name
      - name: link status
        description: |
          Display the status of links in the current site.
        output: |
          NAME    STATUS   COST
          west    Ready    1
          south   Error    10

          Links from remote sites:

          <none>
        inherit_standard_options: [output, namespace, context, platform, help]
  - name: Service exposure
    commands:
      - name: connector
        related_commands: [listener]
        description: |
          Display help for connector commands and exit.
        inherit_standard_options: [help]
      - name: connector create
        related_commands: ["listener create"]
        description: |
          Create a connector.
        examples: |
          # Create a connector for a database
          skupper connector create database 5432

          # Set the routing key and workload explicitly
          skupper connector create backend 8080 --routing-key be1 --workload deployment/backend

          # Produce YAML output
          skupper connector create backend 8080 --output yaml
        output: |
          Waiting for status...
          Connector "<name>" is ready.
        inherit_standard_options: [name, port, routing-key, selector, workload, host, include-not-ready, type, tls-secret, output, namespace, context, platform, help]
        options:
          - name: name
          - name: port
            required: true
          - name: host
            description: |
              The hostname or IP address of the server.

              This is an alternative to setting the `--selector` or
              `--workload` options.
      - name: connector update
        related_commands: ["listener update"]
        description: |
          Update a connector.
        examples: |
          # Change the workload and port
          skupper connector update database --workload deployment/mysql --port 3306

          # Change the routing key
          skupper connector update backend --routing-key be2

          # Produce YAML output
          skupper connector update backend --port 9090 --output yaml
        output: |
          Waiting for update to complete...
          Connector "<name>" is updated.
        inherit_standard_options: [name, port, routing-key, selector, workload, host, include-not-ready, type, tls-secret, output, namespace, context, platform, help]
        options:
          - name: name
          - name: port
            required: false
            positional: false
          - name: host
            description: |
              The hostname or IP address of the server.

              This is an alternative to setting the `--selector` or
              `--workload` options.
      - name: connector delete
        related_commands: ["listener delete"]
        description: |
          Delete a connector.
        output: |
          Waiting for deletion to complete...
          Connector "<name>" is deleted.
        inherit_standard_options: [namespace, context, platform, help]
        options:
          - name: name
            type: string
            required: true
            description: |
              The name of the connector resource.
      - name: connector status
        description: |
          Display the status of connectors in the current site.
        output: |
          $ skupper connector status
          NAME       STATUS   ROUTING-KEY   SELECTOR         HOST     PORT   LISTENERS
          backend    Ready    backend       app=backend      <none>   8080   1
          database   Ready    database      app=postgresql   <none>   5432   1

          $ skupper connector status backend
          Name:         backend
          Status:       Ready
          Routing key:  backend
          Selector:     app=backend
          Host:         <none>
          Port:         8080
          Listeners:    1
        inherit_standard_options: [name, output, namespace, context, platform, help]
        options:
          - name: name
            required: false
            positional: true
            description: |
              The name of the connector resource.
      - name: listener
        related_commands: [connector]
        description: |
          Display help for listener commands and exit.
        inherit_standard_options: [help]
      - name: listener create
        related_commands: ["connector create"]
        description: |
          Create a listener.
        examples: |
          # Create a listener for a database
          skupper listener create database 5432

          # Set the routing key and host explicitly
          skupper listener create backend 8080 --routing-key be1 --host apiserver

          # Produce YAML output
          skupper listener create backend 8080 --output yaml
        output: |
          Waiting for status...
          Listener "<name>" is ready.
        inherit_standard_options: [name, port, routing-key, host, tls-secret, type, output, namespace, context, platform, help]
        options:
          - name: name
            description: |
              The name of the listener resource.
      - name: listener update
        related_commands: ["connector update"]
        description: |
          Update a listener.
        examples: |
          # Change the host and port
          skupper listener update database --host mysql --port 3306

          # Change the routing key
          skupper listener update backend --routing-key be2

          # Produce YAML output
          skupper listener update backend --port 9090 --output yaml
        output: |
          Waiting for update to complete...
          Listener "<name>" is updated.
        inherit_standard_options: [name, port, routing-key, host, tls-secret, type, output, namespace, context, platform, help]
        options:
          - name: name
          - name: port
            property: port
            required: false
            positional: false
      - name: listener delete
        related_commands: ["connector delete"]
        description: |
          Delete a listener.
        output: |
          Waiting for deletion to complete...
          Listener "<name>" is deleted.
        inherit_standard_options: [namespace, context, platform, help]
        options:
          - name: name
            type: string
            required: true
            description: |
              The name of the listener resource.
      - name: listener status
        description: |
          Display the status of listeners in the current site.
        output: |
          $ skupper listener status
          NAME       STATUS   ROUTING-KEY   HOST       PORT   CONNECTORS
          backend    Ready    backend       backend    8080   1
          database   Ready    database      database   5432   1

          $ skupper connector status backend
          Name:         backend
          Status:       Ready
          Routing key:  backend
          Host:         backend
          Port:         8080
          Connectors:    1
        inherit_standard_options: [name, output, namespace, context, platform, help]
        options:
          - name: name
            required: false
            positional: true
            description: |
              The name of the listener resource.
  - name: Debug operations
    commands:
      - name: debug
        description: |
          Display help for debug commands and exit.
        inherit_standard_options: [help]
      - name: debug dump
        description: |
          Generate a debug dump file.
        output: |
          Debug dump file generated at <file>.
        inherit_standard_options: [namespace, context, platform, help]
  - name: Other operations
    commands:
      # - name: network status
      - name: version
        description: |
          Display versions of Skupper components
        inherit_standard_options: [output, namespace, context, platform, help]
