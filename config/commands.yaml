options:
  create/name:
    name: name
    type: string
    required: true
    description: |
      The name of the resource to be created.
    links:
      - title: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  create/wait:
    name: wait
    type: string
    placeholder: status
    default: ready
    description: |
      Wait for the given status before exiting.
    choices:
      - name: pending
        description: Pending
      - name: configured
        description: Configured
      - name: ready
        description: Ready
  create/timeout:
    name: timeout
    type: string
    placeholder: duration
    default: 60s
    description: |
      Raise an error if the operation does not complete in the given
      period of time.
    links:
      - title: Duration format
        url: https://pkg.go.dev/time#ParseDuration
  update/name:
    name: name
    type: string
    required: true
    description: |
      The name of the resource to be updated.
    links:
      - title: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  update/wait:
    name: wait
    type: string
    placeholder: status
    default: ready
    description: |
      Wait for the given status before exiting.
    choices:
      - name: pending
        description: Pending
      - name: configured
        description: Configured
      - name: ready
        description: Ready
  update/timeout:
    name: timeout
    type: string
    placeholder: duration
    default: 60s
    description: |
      Raise an error if the operation does not complete in the given
      period of time.
  delete/name:
    name: name
    type: string
    required: true
    description: |
      The name of the resource to be deleted.
    links:
      - title: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  delete/wait:
    name: wait
    type: boolean
    default: true
    description: |
      Wait for deletion to complete before exiting.
  delete/timeout:
    name: timeout
    type: string
    placeholder: duration
    default: 60s
    description: |
      Raise an error if the operation does not complete in the given
      period of time.
  status/name:
    name: name
    type: string
    required: false
    positional: true
    description: |
      An optional resource name.  If set, the status command reports
      status for the named resource only.
    links:
      - title: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  status/output:
    name: output
    type: string
    placeholder: format
    short_option: o
    description: |
      Print status to the console in a structured output format.
    choices:
      - name: json
        description: Produce JSON output
      - name: yaml
        description: Produce YAML output
  status/timeout:
    name: timeout
    type: string
    placeholder: duration
    default: 60s
    description: |
      Raise an error if the operation does not complete in the given
      period of time.
  generate/name:
    name: name
    type: string
    required: true
    description: |
      The name of the resource to be generated.
    links:
      - title: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  generate/output:
    name: output
    type: string
    placeholder: format
    default: yaml
    short_option: o
    description: |
      Select the output format.
    choices:
      - name: json
        description: Produce JSON output
      - name: yaml
        description: Produce YAML output
  site/enable_link_access:
    name: enable-link-access
    group: frequently-used
    type: boolean
    description: |
      Allow access for incoming links from remote sites.

      <!-- XXX reference link access type -->
    links:
      - title: Link access concept
        url: /concepts/link-access.html
  site/link_access_type:
    name: link-access-type
    property: linkAccess
    placeholder: type
    group: null
    platforms: [Kubernetes]
    default: default
    choices:
      - name: default
        description: |
          Use the default link access.  On OpenShift, the
          default is `route`.  For other Kubernetes flavors,
          the default is `loadbalancer`.
      - name: route
        description: Use an OpenShift route.  _OpenShift only._
      - name: loadbalancer
        description: Use a Kubernetes load balancer.  _Kubernetes only._
  site/service_account:
    name: service-account
    property: serviceAccount
    placeholder: name
  link/cost:
    name: cost
    property: cost
  connector/name:
    name: name
    type: string
    required: true
    description: |
      The name of the Connector resource.
    links:
      - title: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  connector/port:
    name: port
    property: port
    positional: true
  connector/routing_key:
    name: routing-key
    group: frequently-used
    required: false
    property: routingKey
    default: _Value of name_
  connector/selector:
    name: selector
    property: selector
    default: app=[value-of-name]
  connector/workload:
    name: workload
    group: frequently-used
    type: string
    placeholder: resource
    description: |
      A Kubernetes resource name that identifies a workload.
      It resolves to an equivalent pod selector.

      This is an alternative to setting the `--selector` or
      `--host` options.
    platforms: [Kubernetes]
    links:
      - title: Kubernetes workloads
        url: https://kubernetes.io/docs/concepts/workloads/
  connector/host:
    name: host
    required: false
    property: host
    default: _Value of name_
  connector/tls_credentials:
    name: tls-credentials
    property: tlsCredentials
    # XXX Not inheriting links!
  connector/include_not_ready:
    name: include-not-ready
    property: includeNotReady
  listener/port:
    name: port
    property: port
    positional: true
  listener/routing_key:
    name: routing-key
    group: frequently-used
    required: false
    property: routingKey
    default: _Value of name_
  listener/host:
    name: host
    group: frequently-used
    required: false
    property: host
    default: _Value of name_
  listener/tls_credentials:
    name: tls-credentials
    property: tlsCredentials
  context/namespace:
    name: namespace
    group: global
    type: string
    placeholder: name
    short_option: n
    description: |
      Set the namespace.
    links:
      - title: Kubernetes namespaces
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  context/context:
    name: context
    group: global
    type: string
    placeholder: name
    description: |
      Set the kubeconfig context.
    platforms: [Kubernetes]
    links:
      - title: Kubernetes kubeconfigs
        url: https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/
  context/kubeconfig:
    name: kubeconfig
    group: global
    type: string
    placeholder: file
    description: |
      Set the path to the kubeconfig file.
    platforms: [Kubernetes]
    links:
      - title: Kubernetes kubeconfigs
        url: https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/
  global/platform:
    name: platform
    group: global
    type: string
    placeholder: platform
    default: kubernetes
    choices:
      - name: kubernetes
        description: Kubernetes
      - name: docker
        description: Docker
      - name: podman
        description: Podman
      - name: linux
        description: Linux
    description: |
      Set the Skupper platform.
  global/help:
    name: help
    group: global
    type: boolean
    short_option: h
    description: |
      Display help and exit.
commands:
  - name: site
    description: |
      Display help for site commands and exit.
    include_options: [global/*]
    subcommands:
      # site.create
      - name: create
        wait: Ready
        description: |
          Create a site.
        examples: |
          # Create a site
          $ skupper site create west
          Waiting for status...
          Site "west" is ready.

          # Create a site that can accept links from remote sites
          $ skupper site create west --enable-link-access
        include_options: [site/*, create/*, context/*, global/*]
        options:
          - name: name
            description: |
              A name of your choice for the Skupper site.  This name is
              displayed in the console and CLI output.
        errors:
          - message: A site resource already exists
            description: |
              There is already a site resource defined for the namespace.
      # site.update
      - name: update
        wait: Ready
        description: |
          Change site settings.
        examples: |
          # Update the current site to accept links
          $ skupper site update --enable-link-access
          Waiting for status...
          Site "west" is ready.

          # Update multiple settings
          $ skupper site update --enable-link-access --service-account alice
        include_options: [site/*, update/*, context/*, global/*]
        options:
          - name: name
            required: false
            positional: true
            description: |
              The name of the site resource.

              If not specified, the name is that of the site
              associated with the current namespace.
        errors:
          - message: No site resource exists
            description: |
              There is no existing Skupper site resource to update.
      # site.delete
      - name: delete
        wait: Deletion
        description: |
          Delete a site.
        examples: |
          # Delete the current site
          $ skupper site delete
          Waiting for deletion...
          Site "west" is deleted.

          # Delete the current site and all of its associated Skupper resources
          $ skupper site delete --all
        include_options: [delete/*, context/*, global/*]
        options:
          - name: name
            required: false
            positional: true
            description: |
              The name of the site resource.

              If not specified, the name is that of the site
              associated with the current namespace.
          - name: all
            group: frequently-used
            type: boolean
            description: |
              In addition the site resource, delete all of the Skupper
              resources associated with the site in the current
              namespace.
        errors:
          - message: No site resource exists
            description: |
              There is no existing Skupper site resource to delete.
      # site.status
      - name: status
        description: |
          Display the status of a site.
        examples: |
          # Show the status of the current site
          $ skupper site status
          Name:      west
          Status:    Ready
          Message:   -
        include_options: [status/*, context/*, global/*]
        options:
          - name: name
            required: false
            positional: true
            description: |
              The name of the site resource.

              If not specified, the name is that of the site
              associated with the current namespace.
      # site.generate
      - name: generate
        description: |
          Generate a Site resource.
        examples: |
          # Generate a Site resource and print it to the console
          $ skupper site generate west --enable-link-access
          apiVersion: skupper.io/v2alpha1
          kind: Site
          metadata:
            name: west
          spec:
            linkAccess: default

          # Generate a Site resource and direct the output to a file
          $ skupper site generate east > east.yaml
        include_options: [generate/*, site/*, global/*]
  - name: token
    resource: Claim
    related_concepts: ["access grant", "access token"]
    related_resources: [AccessGrant, AccessToken]
    description: |
      Display help for token commands and exit.
    include_options: [global/*]
    subcommands:
      # token.issue
      - name: issue
        wait: Ready
        resource: AccessGrant
        related_concepts: ["access grant", "access token"]
        related_resources: [AccessGrant, AccessToken]
        related_commands: [token/redeem]
        description: |
          Issue a token file redeemable for a link to the current site.

          This command first creates an access grant in order to issue
          the token.

          Issuing a token requires a site with link access enabled.
          The command waits for the site to enter the ready state
          before producing the token.
        examples: |
          # Issue an access token
          $ skupper token issue ~/token.yaml
          Waiting for status...
          Access grant "west-6bfn6" is ready.
          Token file /home/fritz/token.yaml created.

          Transfer this file to a remote site. At the remote site,
          create a link to this site using the 'skupper token
          redeem' command:

              $ skupper token redeem <file>

          The token expires after 1 use or after 15 minutes.

          # Issue an access token with non-default limits
          $ skupper token issue ~/token.yaml --expiration-window 24h --redemptions-allowed 3

          # Issue a token using an existing access grant
          $ skupper token issue ~/token.yaml --grant west-1
        include_options: [context/*, global/*]
        options:
          - name: file
            type: string
            required: true
            description: |
              The name of the token file to create.
          - name: timeout
            type: string
            placeholder: duration
            default: 60s
            description: |
              Raise an error if the operation does not complete in the given
              period of time.
          - name: expiration-window
            property: expirationWindow
            placeholder: duration
          - name: redemptions-allowed
            property: redemptionsAllowed
          - name: grant
            type: string
            placeholder: name
            description: |
              Use the named access grant instead of creating a new
              one.
        errors:
          - message: Link access is not enabled
            description: |
              Link access at this site is not currently enabled.  You
              can use "skupper site update --enable-link-access" to
              enable it.
      # token.redeem
      - name: redeem
        related_concepts: ["access grant", "access token"]
        related_resources: [AccessGrant, AccessToken]
        related_commands: [token/issue]
        description: |
          Redeem a token file in order to create a link to a remote
          site.
        examples: |
          # Redeem an access token
          $ skupper token redeem ~/token.yaml
          Waiting for status...
          Link "west-6bfn6" is active.
          You can now safely delete /home/fritz/token.yaml.
        include_options: [context/*, global/*]
        options:
          - name: file
            type: string
            required: true
            description: |
              The name of the token file to use.
          - name: timeout
            type: string
            placeholder: duration
            default: 60s
            description: |
              Raise an error if the operation does not complete in the given
              period of time.
  - name: link
    related_commands: [token]
    description: |
      Display help for link commands and exit.
    include_options: [global/*]
    subcommands:
      # link.update
      - name: update
        wait: Ready
        description: |
          Change link settings.
        examples: |
          # Change the link cost
          $ skupper link update west-6bfn6 --cost 10
          Waiting for status...
          Link "west-6bfn6" is ready.
        include_options: [link/*, update/*, context/*, global/*]
      # link.delete
      - name: delete
        wait: Deletion
        description: |
          Delete a link.
        examples: |
          # Delete a link
          $ skupper link delete west-6bfn6
          Waiting for deletion...
          Link "west-6bfn6" is deleted.
        include_options: [delete/*, context/*, global/*]
      # link.status
      - name: status
        description: |
          Display the status of links in the current site.
        examples: |
          # Show the status of all links in the current site
          $ skupper link status
          NAME          STATUS   COST
          west-6bfn6    Ready    1
          south-ac619   Error    10

          Links from remote sites:

          [none]

          # Show the status of one link
          $ skupper link status west-6bfn6
          Name:     west-6bfn6
          Status:   Ready
          Message:  [none]
          Cost:     1
        include_options: [status/*, context/*, global/*]
      # link.generate
      - name: generate
        description: |
          Generate a Link resource for use in a remote site.

          Generating a link requires a site with link access enabled.
          The command waits for the site to enter the ready state
          before producing the link.

        # - Using this skips the grant and token procedure
        # - The generated output includes a Skupper Link and an associated secret
        # - You can apply the link at a remote site to create a link to this site
        examples: |
          # Generate a Link resource and print it to the console
          $ skupper link generate
          apiVersion: skupper.io/v2alpha1
          kind: Link
          metadata:
            name: south-ac619
          spec:
            endpoints:
              - group: skupper-router-1
                host: 10.97.161.185
                name: inter-router
                port: "55671"
              - group: skupper-router-1
                host: 10.97.161.185
                name: edge
                port: "45671"
            tlsCredentials: south-ac619
          ---
          apiVersion: v1
          kind: Secret
          type: kubernetes.io/tls
          metadata:
            name: south-ac619
          data:
            ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJB [...]
            tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJ [...]
            tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0N [...]

          # Generate a Link resource and direct the output to a file
          $ skupper link generate > link.yaml
        include_options: [link/*, generate/*, context/*, global/*]
        options:
          - name: name
            positional: true
            required: false
            description: |
              The name of the resource to be generated.  A name is
              generated if none is provided.
        notes: |
          Should the default generated link have useClientCert: true?
  - name: connector
    related_commands: [listener]
    description: |
      Display help for connector commands and exit.
    include_options: [global/*]
    subcommands:
      # connector.create
      - name: create
        wait: Configured
        related_commands: [listener/create]
        description: |
          Create a connector.
        examples: |
          # Create a connector for a database
          $ skupper connector create database 5432
          Waiting for status...
          Connector "database" is configured.

          # Set the routing key and selector explicitly
          $ skupper connector create backend 8080 --routing-key be1 --selector app=backend

          # Use the workload option to select pods
          $ skupper connector create backend 8080 --workload deployment/backend
        include_options: [connector/*, create/*, context/*, global/*]
        options:
          - name: name
          - name: port
            required: true
          - name: routing-key
          - name: selector
          - name: workload
          - name: host
          - name: wait
            default: configured
          - name: timeout
      # connector.update
      - name: update
        wait: Configured
        related_commands: [listener/update]
        description: |
          Update a connector.
        examples: |
          # Change the workload and port
          $ skupper connector update database --workload deployment/mysql --port 3306
          Waiting for status...
          Connector "database" is configured.

          # Change the routing key
          $ skupper connector update backend --routing-key be2
        include_options: [connector/*, update/*, context/*, global/*]
      # connector.delete
      - name: delete
        wait: Deletion
        related_commands: [listener/delete]
        description: |
          Delete a connector.
        examples: |
          # Delete a connector
          $ skupper connector delete database
          Waiting for deletion...
          Connector "database" is deleted.
        include_options: [delete/*, context/*, global/*]
      # connector.status
      - name: status
        description: |
          Display the status of connectors in the current site.
        examples: |
          # Show the status of all connectors in the current site
          $ skupper connector status
          NAME       STATUS   ROUTING-KEY   SELECTOR         HOST     PORT   LISTENERS
          backend    Ready    backend       app=backend      [none]   8080   true
          database   Ready    database      app=postgresql   [none]   5432   true

          # Show the status of one connector
          $ skupper connector status backend
          Name:                     backend
          Status:                   Ready
          Message:                  [none]
          Routing key:              backend
          Selector:                 app=backend
          Host:                     [none]
          Port:                     8080
          Has matching listeners:   1
        include_options: [status/*, context/*, global/*]
      # connector.generate
      - name: generate
        description: |
          Generate a Connector resource.
        examples: |
          # Generate a Connector resource and print it to the console
          $ skupper connector generate backend 8080
          apiVersion: skupper.io/v2alpha1
          kind: Connector
          metadata:
            name: backend
          spec:
            routingKey: backend
            port: 8080
            selector: app=backend

          # Generate a Connector resource and direct the output to a file
          $ skupper connector generate backend 8080 > backend.yaml
        include_options: [connector/*, generate/*, global/*]
        options:
          - name: name
          - name: port
  - name: listener
    related_commands: [connector]
    description: |
      Display help for listener commands and exit.
    include_options: [global/*]
    subcommands:
      # listener.create
      - name: create
        wait: Configured
        related_commands: [connector/create]
        description: |
          Create a listener.
        examples: |
          # Create a listener for a database
          $ skupper listener create database 5432
          Waiting for status...
          Listener "database" is configured.

          # Set the routing key and host explicitly
          $ skupper listener create backend 8080 --routing-key be1 --host apiserver
        include_options: [listener/*, create/*, context/*, global/*]
        options:
          - name: name
          - name: port
          - name: wait
            default: configured
          - name: timeout
      # listener.update
      - name: update
        wait: Configured
        related_commands: [connector/update]
        description: |
          Update a listener.
        examples: |
          # Change the host and port
          $ skupper listener update database --host mysql --port 3306
          Waiting for status...
          Listener "database" is configured.

          # Change the routing key
          $ skupper listener update backend --routing-key be2
        include_options: [listener/*, update/*, context/*, global/*]
        options:
          - name: name
          - name: host
          - name: port
            group: frequently-used
            required: false
            positional: false
      # listener.delete
      - name: delete
        wait: Deletion
        related_commands: [connector/delete]
        description: |
          Delete a listener.
        examples: |
          # Delete a listener
          $ skupper listener delete database
          Waiting for deletion...
          Listener "database" is deleted.
        include_options: [delete/*, context/*, global/*]
      # listener.status
      - name: status
        description: |
          Display the status of listeners in the current site.
        examples: |
          # Show the status of all listeners in the current site
          $ skupper listener status
          NAME       STATUS   ROUTING-KEY   HOST       PORT   CONNECTORS
          backend    Ready    backend       backend    8080   true
          database   Ready    database      database   5432   true

          # Show the status of one listener
          $ skupper listener status backend
          Name:                      backend
          Status:                    Ready
          Message:                   [none]
          Routing key:               backend
          Host:                      backend
          Port:                      8080
          Has matching connectors:   true
        include_options: [status/*, context/*, global/*]
      # listener.generate
      - name: generate
        description: |
          Generate a Listener resource.
        examples: |
          # Generate a Listener resource and print it to the console
          $ skupper listener generate backend 8080
          apiVersion: skupper.io/v2alpha1
          kind: Listener
          metadata:
            name: backend
          spec:
            routingKey: backend
            port: 8080
            host: backend

          # Generate a Listener resource and direct the output to a file
          $ skupper listener generate backend 8080 > backend.yaml
        include_options: [listener/*, generate/*, global/*]
        options:
          - name: name
          - name: port
  - name: system
    platforms: [Docker, Podman, Linux]
    subcommands:
      # system.setup
      - name: setup
        platforms: [Docker, Podman, Linux]
        description: |
          Install and configure the Skupper components for the current
          namespace.
      # system.teardown
      - name: teardown
        description: |
          Remove the Skupper components from the current namespace.
      # system.start
      - name: start
        platforms: [Docker, Podman, Linux]
        description: |
          Start running the Skupper components for the current site.
      # system.stop
      - name: stop
        platforms: [Docker, Podman, Linux]
        description: |
          Shut down the Skupper components for the current site.
      # system.reload
      - name: reload
        platforms: [Docker, Podman, Linux]
        description: |
          Reload the site configuration.
  - name: debug
    description: |
      Display help for debug commands and exit.
    include_options: [global/*]
    subcommands:
      - name: dump
        description: |
          Generate a debug dump file.
        examples: |
          # Generate a debug dump file
          $ skupper debug dump ~/dump.tar.gz
          Debug dump file generated at /home/fritz/dump.tar.gz.
        include_options: [context/*, global/*]
        options:
          - name: file
            type: string
            required: true
  - name: version
    description: |
      Display versions of Skupper components.
    examples: |
      # Show component versions
      $ skupper version
      COMPONENT          VERSION
      cli                2.0.0
      controller         2.0.0
      router             3.0.0
      network-observer   1.0.0

      # Show version details in YAML format
      $ skupper version --output yaml
      components:
        cli:
          version: 2.0.0
        controller:
          version: 2.0.0
          images:
            - name: quay.io/skupper/controller:2.0.0
              digest: sha256:663d97f86ff3fcce27a3842cd2b3a8e32af791598a46d815c07b0aec07505f55
        router:
          version: 3.0.0
          images:
            - name: quay.io/skupper/router:3.0.0
              digest: sha256:dc5e27385a1e110dd2db1903ba7ec3e0d50b57f742aa02d7dd0a7b1b68c34394
            - name: quay.io/skupper/kube-adaptor:2.0.0
              digest: sha256:4dc24bb3d605ed3fcec2f8ef7d45ca883d9d87b278bfedd5fcca74281d617a5e
        network-observer:
          version: 1.0.0
            - name: quay.io/skupper/network-observer:1.0.0
              digest: sha256:670ea540b1e037270eab73a1da2b7ec9e5c05e17cafb8948159ba1acd9ea5552
    include_options: [context/*, global/*]
    options:
      - name: output
        type: string
        short_option: o
        description: |
          Produce verbose structured output.
        choices:
          - name: json
            description: Produce JSON output
          - name: yaml
            description: Produce YAML output
groups:
  - name: Site configuration
    commands:
      - site
  - name: Site linking
    commands:
      - token
      - link
  - name: Service exposure
    commands:
      - connector
      - listener
  - name: Site operation
    commands:
      - system
  - name: Debug operations
    commands:
      - debug
  - name: Other operations
    commands:
      - version
