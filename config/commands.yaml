options:
  create/name:
    name: name
    type: string
    required: true
    description: |
      The name of the resource to be created.
    links:
      - name: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  create/wait:
    name: wait
    type: string
    default: ready
    description: |
      Wait for the given status before exiting.
    choices:
      - name: pending
        description: Pending
      - name: configured
        description: Configured
      - name: ready
        description: Ready
  create/timeout:
    name: timeout
    type: string
    format: duration
    default: 60s
    description: |
      Raise an error if the operation does not complete in the given
      period of time.
  update/name:
    name: name
    type: string
    required: true
    description: |
      The name of the resource to be updated.
    links:
      - name: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  update/wait:
    name: wait
    type: string
    default: ready
    description: |
      Wait for the given status before exiting.
    choices:
      - name: pending
        description: Pending
      - name: configured
        description: Configured
      - name: ready
        description: Ready
  update/timeout:
    name: timeout
    type: string
    format: duration
    default: 60s
    description: |
      Raise an error if the operation does not complete in the given
      period of time.
  delete/name:
    name: name
    type: string
    required: true
    description: |
      The name of the resource to be deleted.
    links:
      - name: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  delete/timeout:
    name: timeout
    type: string
    format: duration
    default: 60s
    description: |
      Raise an error if the operation does not complete in the given
      period of time.
  status/name:
    name: name
    type: string
    required: false
    positional: true
    description: |
      An optional resource name.  If set, the status command reports
      status for the named resource only.
    links:
      - name: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  status/output:
    name: output
    type: string
    description: |
      Print status to the console in a structured output format.
    choices:
      - name: json
        description: Produce JSON output
      - name: yaml
        description: Produce YAML output
  status/timeout:
    name: timeout
    type: string
    format: duration
    default: 60s
    description: |
      Raise an error if the operation does not complete in the given
      period of time.
  generate/name:
    name: name
    type: string
    required: true
    description: |
      The name of the resource to be generated.
    links:
      - name: Kubernetes object names
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/
  generate/output:
    name: output
    type: string
    default: yaml
    description: |
      Select the output format.
    choices:
      - name: json
        description: Produce JSON output
      - name: yaml
        description: Produce YAML output
  site/enable_link_access:
    name: enable-link-access
    type: boolean
    description: |
      Allow access for incoming links from remote sites.

      <!-- XXX reference link access type -->
    links:
      - name: Link access concept
        url: /concepts/link-access.html
  site/link_access_type:
    name: link-access-type
    property: linkAccess
    default: default
    choices:
      - name: default
        description: |
          Use the default link access.  On OpenShift, the
          default is `route`.  For other Kubernetes flavors,
          the default is `loadbalancer`.
      - name: route
        description: Use an OpenShift route.  _OpenShift only._
      - name: loadbalancer
        description: Use a Kubernetes load balancer.  _Kubernetes only._
  site/service_account:
    name: service-account
    property: serviceAccount
  link/cost:
    name: cost
    property: cost
  connector/port:
    name: port
    property: port
    positional: true
  connector/routing-key:
    name: routing-key
    property: routingKey
    default: _Value of name_
  connector/host:
    name: host
    property: host
  connector/type:
    name: type
    property: type
  connector/tls_credentials:
    name: tls-credentials
    property: tlsCredentials
  connector/selector:
    name: selector
    property: selector
    default: app=[value-of-name]
  connector/workload:
    name: workload
    type: string
    format: resource name
    description: |
      A Kubernetes resource name that identifies a workload.
      It resolves to an equivalent pod selector.

      This is an alternative to setting the `--selector` or
      `--host` options.
    platforms: [Kubernetes]
    links:
      - name: Kubernetes workloads
        url: https://kubernetes.io/docs/concepts/workloads/
  connector/include_not_ready:
    name: include-not-ready
    property: includeNotReady
  listener/port:
    name: port
    property: port
    positional: true
  listener/routing_key:
    name: routing-key
    property: routingKey
    default: _Value of name_
  listener/host:
    name: host
    property: host
    default: _Value of name_
  listener/tls_credentials:
    name: tls-credentials
    property: tlsCredentials
  listener/type:
    name: type
    property: type
  context/namespace:
    name: namespace
    type: string
    short_option: n
    description: |
      Set the namespace.
    links:
      - name: Kubernetes namespaces
        url: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
  context/context:
    name: context
    type: string
    description: |
      Set the kubeconfig context.
    platforms: [Kubernetes]
    links:
      - name: Kubernetes kubeconfigs
        url: https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/
  context/kubeconfig:
    name: kubeconfig
    type: string
    description: |
      Set the path to the kubeconfig file.
    platforms: [Kubernetes]
    links:
      - name: Kubernetes kubeconfigs
        url: https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/
  global/platform:
    name: platform
    type: string
    default: kubernetes
    choices:
      - name: kubernetes
        description: Kubernetes
      - name: docker
        description: Docker
      - name: podman
        description: Podman
      - name: systemd
        description: Systemd
    description: |
      Set the Skupper platform.
  global/help:
    name: help
    type: boolean
    short_option: h
    description: |
      Display help and exit.
commands:
  - name: site
    description: |
      Display help for site commands and exit.
    include_options: [global/*]
    subcommands:
      # site.create
      - name: create
        wait: Ready
        description: |
          Create a site.
        examples: |
          # Create a site
          $ skupper site create west
          Waiting for status...
          Site "west" is ready.

          # Create a site that can accept links from remote sites
          $ skupper site create west --enable-link-access
        include_options: [create/*, site/*, context/*, global/*]
        options:
          - name: name
            description: |
              A name of your choice for the Skupper site.  This name is
              displayed in the console and CLI output.
        errors:
          - message: A site resource already exists
            description: |
              There is already a site resource defined for the namespace.
      # site.update
      - name: update
        wait: Ready
        description: |
          Change site settings.
        examples: |
          # Update the current site to accept links
          $ skupper site update --enable-link-access
          Waiting for status...
          Site "west" is ready.

          # Update multiple settings
          $ skupper site update --enable-link-access --service-account alice
        include_options: [update/*, site/*, context/*, global/*]
        options:
          - name: name
            required: false
            positional: true
            description: |
              The name of the site resource.

              If not specified, the name is that of the site
              associated with the current namespace.
        errors:
          - message: No site resource exists
            description: |
              There is no existing Skupper site resource to update.
      # site.delete
      - name: delete
        wait: Deletion
        description: |
          Delete a site.
        examples: |
          # Delete the current site
          $ skupper site delete
          Waiting for deletion...
          Site "west" is deleted.

          # Delete the current site and all of its associated Skupper resources
          $ skupper site delete --all
        include_options: [delete/*, context/*, global/*]
        options:
          - name: name
            required: false
            positional: true
            description: |
              The name of the site resource.

              If not specified, the name is that of the site
              associated with the current namespace.
          - name: all
            type: boolean
            description: |
              In addition the site resource, delete all of the Skupper
              resources associated with the site in the current
              namespace.
        errors:
          - message: No site resource exists
            description: |
              There is no existing Skupper site resource to delete.
      # site.status
      - name: status
        description: |
          Display the status of a site.
        examples: |
          # Show the status of the current site
          $ skupper site status
          Name:      west
          Status:    Ready
          Message:   -
        include_options: [status/*, context/*, global/*]
      # site.generate
      - name: generate
        description: |
          Generate a Site resource.
        examples: |
          # Generate a Site resource and print it to the console
          $ skupper site generate west --enable-link-access
          apiVersion: skupper.io/v2alpha1
          kind: Site
          metadata:
            name: west
          spec:
            linkAccess: default

          # Generate a Site resource and direct the output to a file
          $ skupper site generate east > east.yaml
        notes: |
          Do not generate resources with namespaces.  That's already
          added in by the kubectl tooling when the resource is
          applied.  Not having the namespace means the resulting
          output can be used in more contexts.
        include_options: [generate/*, site/*, global/*]
      # site.start
      - name: start
        platforms: [Docker, Podman, Systemd]
        description: |
          Start the Skupper router for the current site.
      # site.stop
      - name: stop
        platforms: [Docker, Podman, Systemd]
        description: |
          Stop the Skupper router for the current site.
      # site.reload
      - name: reload
        platforms: [Docker, Podman, Systemd]
        description: |
          Reload the site configuration.
  - name: token
    resource: Claim
    related_concepts: ["access grant", "access token"]
    related_resources: [AccessGrant, AccessToken]
    description: |
      Display help for token commands and exit.
    include_options: [global/*]
    subcommands:
      # token.issue
      - name: issue
        wait: Ready
        resource: AccessGrant
        related_concepts: ["access grant", "access token"]
        related_resources: [AccessGrant, AccessToken]
        related_commands: [token/redeem]
        description: |
          Issue a token file redeemable for a link to the current site.

          This command first creates an access grant in order to issue
          the token.
        examples: |
          # Issue an access token
          $ skupper token issue ~/token.yaml
          Waiting for status...
          Access grant "west-6bfn6" is ready.
          Token file /home/fritz/token.yaml created.

          Transfer this file to a remote site. At the remote site,
          create a link to this site using the 'skupper token
          redeem' command:

              $ skupper token redeem <file>

          The token expires after 1 use or after 15 minutes.

          # Issue an access token with non-default limits
          $ skupper token issue ~/token.yaml --expiration-window 24h --redemptions-allowed 3

          # Issue a token using an existing access grant
          $ skupper token issue ~/token.yaml --grant west-1
        include_options: [context/*, global/*]
        options:
          - name: file
            type: string
            required: true
            description: |
              The name of the token file to create.
          - name: timeout
            type: string
            format: duration
            default: 60s
            description: |
              Raise an error if the operation does not complete in the given
              period of time.
          - name: expiration-window
            property: expirationWindow
          - name: redemptions-allowed
            property: redemptionsAllowed
          - name: grant
            type: string
            description: |
              Use the named access grant instead of creating a new
              one.
        errors:
          - message: Link access is not enabled
            description: |
              Link access at this site is not currently enabled.  You
              can use "skupper site update --enable-link-access" to
              enable it.
      # token.redeem
      - name: redeem
        related_concepts: ["access grant", "access token"]
        related_resources: [AccessGrant, AccessToken]
        related_commands: [token/issue]
        description: |
          Redeem a token file in order to create a link to a remote
          site.
        examples: |
          # Redeem an access token
          $ skupper token redeem ~/token.yaml
          Waiting for status...
          Link "west-6bfn6" is active.
          You can now safely delete /home/fritz/token.yaml.
        include_options: [context/*, global/*]
        options:
          - name: file
            type: string
            required: true
            description: |
              The name of the token file to use.
          - name: timeout
            type: string
            format: duration
            default: 60s
            description: |
              Raise an error if the operation does not complete in the given
              period of time.
  - name: link
    related_commands: [token]
    description: |
      Display help for link commands and exit.
    include_options: [global/*]
    subcommands:
      # link.update
      - name: update
        wait: Ready
        description: |
          Change link settings.
        examples: |
          # Change the link cost
          $ skupper link update west-6bfn6 --cost 10
          Waiting for status...
          Link "west-6bfn6" is ready.
        include_options: [create/*, link/*, context/*, global/*]
      # link.delete
      - name: delete
        wait: Deletion
        description: |
          Delete a link.
        examples: |
          # Delete a link
          $ skupper link delete west-6bfn6
          Waiting for deletion...
          Link "west-6bfn6" is deleted.
        include_options: [delete/*, context/*, global/*]
      # link.status
      - name: status
        description: |
          Display the status of links in the current site.
        examples: |
          # Show the status of all links in the current site
          $ skupper link status
          NAME          STATUS   COST
          west-6bfn6    Ready    1
          south-ac619   Error    10

          Links from remote sites:

          <none>

          # Show the status of one link
          $ skupper link status west-6bfn6
          Name:     west-6bfn6
          Status:   Ready
          Cost:     1
        include_options: [status/*, context/*, global/*]
      # link.generate
      - name: generate
        description: |
          Generate a Link resource for use in a remote site.
        include_options: [generate/*, link/*, context/*, global/*]
  - name: connector
    related_commands: [listener]
    description: |
      Display help for connector commands and exit.
    include_options: [global/*]
    subcommands:
      # connector.create
      - name: create
        wait: Configured
        related_commands: [listener/create]
        description: |
          Create a connector.
        examples: |
          # Create a connector for a database
          $ skupper connector create database 5432
          Waiting for status...
          Connector "database" is configured.

          # Set the routing key and workload explicitly
          $ skupper connector create backend 8080 --routing-key be1 --workload deployment/backend
        include_options: [create/*, connector/*, context/*, global/*]
        options:
          - name: name
          - name: port
            required: true
          - name: wait
            default: configured
      # connector.update
      - name: update
        wait: Configured
        related_commands: [listener/update]
        description: |
          Update a connector.
        examples: |
          # Change the workload and port
          $ skupper connector update database --workload deployment/mysql --port 3306
          Waiting for status...
          Connector "database" is configured.

          # Change the routing key
          $ skupper connector update backend --routing-key be2
        include_options: [update/*, connector/*, context/*, global/*]
      # connector.delete
      - name: delete
        wait: Deletion
        related_commands: [listener/delete]
        description: |
          Delete a connector.
        examples: |
          # Delete a connector
          $ skupper connector delete database
          Waiting for deletion...
          Connector "database" is deleted.
        include_options: [delete/*, context/*, global/*]
      # connector.status
      - name: status
        description: |
          Display the status of connectors in the current site.
        examples: |
          # Show the status of all connectors in the current site
          $ skupper connector status
          NAME       STATUS   ROUTING-KEY   SELECTOR         HOST     PORT   LISTENERS
          backend    Ready    backend       app=backend      <none>   8080   1
          database   Ready    database      app=postgresql   <none>   5432   1

          # Show the status of one connector
          $ skupper connector status backend
          Name:          backend
          Status:        Ready
          Routing key:   backend
          Selector:      app=backend
          Host:          <none>
          Port:          8080
          Listeners:     1
        include_options: [status/*, context/*, global/*]
      # connector.generate
      - name: generate
        description: |
          Generate a Connector resource.
        examples: |
          # Generate a Connector resource and print it to the console
          $ skupper connector generate backend 8080
          apiVersion: skupper.io/v2alpha1
          kind: Connector
          metadata:
            name: backend
          spec:
            routingKey: backend
            port: 8080
            selector: app=backend

          # Generate a Connector resource and direct the output to a file
          $ skupper connector generate backend 8080 > backend.yaml
        include_options: [generate/*, connector/*, global/*]
        options:
          - name: name
          - name: port
  - name: listener
    related_commands: [connector]
    description: |
      Display help for listener commands and exit.
    include_options: [global/*]
    subcommands:
      # listener.create
      - name: create
        wait: Configured
        related_commands: [connector/create]
        description: |
          Create a listener.
        examples: |
          # Create a listener for a database
          $ skupper listener create database 5432
          Waiting for status...
          Listener "database" is configured.

          # Set the routing key and host explicitly
          $ skupper listener create backend 8080 --routing-key be1 --host apiserver
        include_options: [create/*, listener/*, context/*, global/*]
        options:
          - name: name
          - name: port
          - name: wait
            default: configured
      # listener.update
      - name: update
        wait: Configured
        related_commands: [connector/update]
        description: |
          Update a listener.
        examples: |
          # Change the host and port
          $ skupper listener update database --host mysql --port 3306
          Waiting for status...
          Listener "database" is configured.

          # Change the routing key
          $ skupper listener update backend --routing-key be2
        include_options: [update/*, listener/*, context/*, global/*]
        options:
          - name: name
          - name: port
            required: false
            positional: false
      # listener.delete
      - name: delete
        wait: Deletion
        related_commands: [connector/delete]
        description: |
          Delete a listener.
        examples: |
          # Delete a listener
          $ skupper listener delete database
          Waiting for deletion...
          Listener "database" is deleted.
        include_options: [delete/*, context/*, global/*]
      # listener.status
      - name: status
        description: |
          Display the status of listeners in the current site.
        examples: |
          # Show the status of all listeners in the current site
          $ skupper listener status
          NAME       STATUS   ROUTING-KEY   HOST       PORT   CONNECTORS
          backend    Ready    backend       backend    8080   1
          database   Ready    database      database   5432   1

          # Show the status of one listener
          $ skupper listener status backend
          Name:          backend
          Status:        Ready
          Routing key:   backend
          Host:          backend
          Port:          8080
          Connectors:    1
        include_options: [status/*, context/*, global/*]
      # listener.generate
      - name: generate
        description: |
          Generate a Listener resource.
        examples: |
          # Generate a Listener resource and print it to the console
          $ skupper listener generate backend 8080
          apiVersion: skupper.io/v2alpha1
          kind: Listener
          metadata:
            name: backend
          spec:
            routingKey: backend
            port: 8080
            host: backend

          # Generate a Listener resource and direct the output to a file
          $ skupper listener generate backend 8080 > backend.yaml
        include_options: [generate/*, listener/*, global/*]
        options:
          - name: name
          - name: port
  - name: debug
    description: |
      Display help for debug commands and exit.
    include_options: [global/*]
    subcommands:
      - name: dump
        description: |
          Generate a debug dump file.
        examples: |
          # Generate a debug dump file
          $ skupper debug dump ~/dump.tar.gz
          Debug dump file generated at /home/fritz/dump.tar.gz.
        include_options: [context/*, global/*]
        options:
          - name: file
            type: string
            required: true
  - name: version
    description: |
      Display versions of Skupper components.
    examples: |
      $ skupper version
      COMPONENT    VERSION   IMAGE                                   // ID?
      cli          2.0.0     -
      controller   2.0.0     quay.io/skupper/controller:2.0.0
      router       3.0.0     quay.io/skupper/router:3.0.0            // Was skupper-router
    include_options: [context/*, global/*]
groups:
  - name: Site configuration
    commands:
      - site
  - name: Site linking
    commands:
      - token
      - link
  - name: Service exposure
    commands:
      - connector
      - listener
  - name: Debug operations
    commands:
      - debug
  - name: Other operations
    commands:
      - version
