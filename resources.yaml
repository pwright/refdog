- name: site
  title: Site
  description: |
    A [site](terminology.md#site) is a place where part of your
    application is running.  *Examples!*

    Sites are linked to form application
    [networks](terminology.md#networks).
  examples:
    - title: YAML
      syntax: yaml
      text: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: west
          namespace: west
          labels:
            skupper.io/type: site
        data: |
          ingress: loadbalancer
    - title: CLI
      syntax: sh
      text: |
        skupper init --site-name west --ingress loadbalancer
  groups:
    - title: Core options
      options:
        - name: name
          type: string
          description: |
            A name of your choice for the Skupper site.  *Appears in the
            console and status stuff!*
        - name: create-network-policy
          type: boolean
          description: |
            Create network policy to restrict access to Skupper services
            exposed through this site to the pods currently in the
            namespace.

    - title: Site ingress options
      description: |
        Options for configuring site [ingress](terminology.md#ingress)
        so it can accept incoming site [links](terminology.md#link).

        This is different from *service* ingress. XXX
      options:
        - name: ingress
          default: |
            `route` if the environment is OpenShift, otherwise
            `loadbalancer`
          type: string
          choices: [route, loadbalancer, nodeport, nginx-ingress-v1, contour-http-proxy, ingress, none]
          description: |
            Select the method for cluster ingress.  This determines
            how Skupper services are exposed outside of the cluster.
        - name: ingress-host
          trouble: Should this get pushed down to ingressOptions?
          type: string
          description: |
            The hostname or alias by which the ingress route or proxy
            can be reached.
        - name: load-balancer-ip
          description: |
            XXX

- name: egress-binding
  title: Egress binding
  extends: service-binding
  examples:
    - title: YAML
      syntax: yaml
      text: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: backend
          namespace: east
          labels:
            skupper.io/type: egress-binding
        data: |
          routing-key: backend-8080
          port: 8080
          selector: app=backend
    - title: CLI
      syntax: sh
      text: |
        skupper service bind-egress backend:8080 deployment/backend
  groups:
    - name: core
      title: Core options
      options:
        - name: hostname
          type: string
          description: |
            The workload that implements this service.
        - name: port
          default: The value of \`port\`
          type: integer
          description: |
            The port the target workload is listening on.
    # - name: enableIngress
    #   trouble: |
    #     Collision with other meanings of "ingress".  I want a note
    #     here that says that some future iteration might include a
    #     third state.  And why the caps?  Our other options don't have
    #     that.
    #   type: string
    #   choices: [Always, Never]
    #   description: |
    #     Determines whether access to the Skupper service is enabled in
    #     this site.
    # - name: publishNotReadyAddresses
    #   type: boolean
    #   description: |
    #     If specified, skupper will not wait for pods to be ready

- name: ingress-binding
  title: Ingress binding
  extends: service-binding
  examples:
    - title: YAML
      syntax: yaml
      text: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: backend
          namespace: west
          labels:
            skupper.io/type: ingress-binding
        data: |
          routing-key: backend-8080
          hostname: backend
          port: 8080
    - title: CLI
      syntax: sh
      text: |
        skupper service bind-ingress backend:8080

- name: service-binding
  hidden: true
  groups:
    - name: core
      title: Core options
      options:
        - name: routing-key
          type: string
          description: |
            XXX
    - name: tls
      title: TLS options
      options:
        - name: generate-tls-secrets
          trouble: |
            This sounds like it generates secrets, but the description
            says it enables encryption.  Does it enable encryption?
          type: boolean
          description: |
            If specified, the service communication will be encrypted using TLS.
        - name: tls-credentials
          type: string
          description: |
            XXX

            The Kubernetes secret name with custom certificates to encrypt
            the communication using TLS.

            The Kubernetes secret name with the CA to expose the service
            over TLS.
    - name: advanced
      title: Advanced options
      options:
        - name: bridge-image
          type: string
          description: |
            The image to use for a bridge running external to the Skupper
            router.

- name: console
  title: Console
  description: |
    XXX
  examples:
    - title: YAML
      syntax: yaml
      text: |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: console
          namespace: west
          labels:
            skupper.io/type: console
        data: |
          ingress: loadbalancer
          user: alice
          password-secret: <secret>
  groups:
    - title: Options
      options:
        - name: auth
          type: string
          choices: [internal, openshift, unsecured]
          description: |
            The user authentication mode for the console.

            `internal` - Use Skupper authentication.  See the
            `console-user` and `console-password` options.

            `openshift` - Use OpenShift authentication, so that users
            who have permission to log into OpenShift and view the
            project (namespace) can view the console.

            `unsecured` - No authentication.  Anyone with the URL can
            view the console.
        - name: user
          default: admin
          type: string
          description: |
            The console username when using `internal` authentication.
        - name: password
          default: "*Generated*"
          type: string
          description: |
            The console password when using `internal` authentication.
            If not set, a random password is generated.
    # - title: Flow collector options
    #   options:
    #     - name: enableFlowCollector
    #       type: boolean
    #       description: |
    #         Enable cross-site flow collection for the application network.
    #     - name: flowCollectorRecordTTL
    #       default: 30m
    #       type: duration
    #       description: |
    #         The time after which terminated flow records are deleted.
    #         Terminated records are those that have an end time set.
    # - title: Router options
    #   options:
    #     - name: router-mode
    #       type: string
    #       choices: [interior, edge]
    #       description: |
    #         The role of the router in the router topology.  *You don't need to change this.*

    #         <!-- Interior routers do X.  Edge routers only do Y. -->
    #     - name: router-logging
    #       default: info
    #       type: string
    #       choices: [trace, debug, info, notice, warning, error]
    #       description: |
    #         Logging settings for the router.
    #     - name: router-debug-mode
    #       trouble: Need to check that disabled is okay.  Do we really want this any longer?
    #       type: string
    #       choices: [disabled, asan, gdb]
    #       description: |
    #         Enable debug mode for the router.
    #     - name: routers
    #       type: integer
    #       description: |
    #         The number of router replicas to start.
    # - title: Resource options
    #   options:
    #     - name: resource-limits
    #       description: Resource requests and limits
    #     - name: resource-annotations
    #     - name: resource-labels
    #     - name: resource-node-affinity
    #     - name: resource-pod-affinity
