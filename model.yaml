groups:
  site-configuration:
    title: Site configuration
    description: |
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
      eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut
      enim ad minim veniam, quis nostrud exercitation ullamco laboris
      nisi ut aliquip ex ea commodo consequat.
  site-linking:
    title: Site linking
    description: |
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
      eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut
      enim ad minim veniam, quis nostrud exercitation ullamco laboris
      nisi ut aliquip ex ea commodo consequat.
  service-exposure:
    title: Service exposure
    description: |
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
      eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut
      enim ad minim veniam, quis nostrud exercitation ullamco laboris
      nisi ut aliquip ex ea commodo consequat.
  everything-else:
    title: Everything else
    description: |
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
      eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut
      enim ad minim veniam, quis nostrud exercitation ullamco laboris
      nisi ut aliquip ex ea commodo consequat.
resources:
  Site:
    group: site-configuration
    description: |
      A [site][site] is a place where components of your application are
      running.  Sites are linked to form application
      [networks][network].

      There can be only one site definition per namespace.

      [site]: concepts.md#site
      [network]: concepts.md#network
    examples:
      - description: A minimal site definition
        yaml: |
          apiVersion: skupper.io/v1alpha1
          kind: Site
          metadata:
            name: east
            namespace: hello-world-east
    properties:
      name:
        description: |
          A name of your choice for the Skupper site.  This name is
          displayed in the console and CLI output.
      ingress:
        default: |
          `route` if the environment is OpenShift, otherwise
          `loadbalancer`
        choices: [route, loadbalancer, nodeport, nginx-ingress-v1, contour-http-proxy, ingress, none]
        description: |
          The method for providing access to this site from outside
          the cluster.  Cluster ingress enables a site to accept
          incoming [links][link].

          <!-- XXX enumerate -->

          [link]: concepts.md#link
  Link:
    group: site-linking
    description: |
      A [link][link] is a site-to-site communication channel. Links
      serve as a transport for application connections and requests.

      [link]: concepts.md#link
    examples:
      - description: A typical link definition
        yaml: |
          apiVersion: skupper.io/v1alpha1
          kind: Link
          metadata:
            name: link-to-west
            namespace: hello-world-east
          spec:
            [...]
  LinkAccess:
    group: site-linking
    description: |
      A [link access][link-access] defines a point of external access
      for links from remote sites.

      [link-access]: XXX
    examples:
      - description: A typical link access definition
        yaml: |
          apiVersion: skupper.io/v1alpha1
          kind: LinkAccess
          metadata:
            name: skupper-router
          spec:
            roles:
            - role: inter-router
              port: 55671
            - role: edge
              port: 45671
            accessType: loadbalancer
            tlsCredentials: skupper-site-server
  Grant:
    group: site-linking
  Claim:
    group: site-linking
  Connector:
    group: service-exposure
    description: |
      A [connector][connector] binds local servers to listeners in
      remote sites.

      Each namespace can contain multiple connector definitions.

      [connector]: concepts.md#connector
    examples:
      - description: |
          A connector in site East for the Hello World backend service
        yaml: |
          apiVersion: skupper.io/v1alpha1
          kind: Connector
          metadata:
            name: backend
            namespace: hello-world-east
          spec:
            routingKey: backend
            port: 8080
            selector: app=backend
    properties:
      routingKey:
        description: |
          The identifier used to route traffic from listeners to
          connectors.  To connect to a service at a remote site, the
          listener and connector must have matching routing keys.
      selector:
        description: |
          A Kubernetes [label selector][selector] for identifying
          server pods.

          [selector]: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
      host:
        description: |
          The hostname or IP address of the server.  This is an
          alternative to `selector` for specifying the target
          server.
      port:
        description: |
          The port number of the server listener.
      tlsCredentials:
        default: "*None*"
        description: |
          The name of a Kubernetes secret containing TLS
          credentials.  The secret contains the trusted server
          certificate (typically a CA certificate).

          It can optionally include a client certificate and key for
          mutual TLS.
  Listener:
    group: service-exposure
    description: |
      A [listener][listener] is a local connection endpoint bound to
      servers in remote sites.

      Each namespace can contain multiple listener definitions.

      [listener]: concepts.md#listener
    examples:
      - description: |
          A listener in site West for the Hello World backend service
          in site East
        yaml: |
          apiVersion: skupper.io/v1alpha1
          kind: Listener
          metadata:
            name: backend
            namespace: hello-world-west
          spec:
            routingKey: backend
            port: 8080
            host: backend
    properties:
      routingKey:
        description: |
          The identifier used to route traffic from listeners to
          connectors.  To connect to a service at a remote site, the
          listener and connector must have matching routing keys.
      host:
        description: |
          The hostname or IP address of the local listener.  Clients
          at this site use the listener host and port to
          establish connections to the remote service.
      port:
        description: |
          The port of the local listener.  Clients at this site use
          the listener host and port to establish connections to
          the remote service.
      tlsCredentials:
        default: "*None*"
        description: |
          The name of a Kubernetes secret containing TLS
          credentials.  The secret contains the server certificate
          and key.

          It can optionally include a client certificate for mutual
          TLS.
